@charset "UTF-8";

@font-face {
  font-family: "linea-basic-10";
  src:url("fonts/linea-basic-10.eot");
  src:url("fonts/linea-basic-10.eot?#iefix") format("embedded-opentype"),
    url("fonts/linea-basic-10.woff") format("woff"),
    url("fonts/linea-basic-10.ttf") format("truetype"),
    url("fonts/linea-basic-10.svg#linea-basic-10") format("svg");
  font-weight: normal;
  font-style: normal;

}

[data-icon]:before {
  font-family: "linea-basic-10" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

[class^="icon-"]:before,
[class*=" icon-"]:before {
  font-family: "linea-basic-10" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.icon-basic-accelerator:before {
  content: "a";
}
.icon-basic-alarm:before {
  content: "b";
}
.icon-basic-anchor:before {
  content: "c";
}
.icon-basic-anticlockwise:before {
  content: "d";
}
.icon-basic-archive:before {
  content: "e";
}
.icon-basic-archive-full:before {
  content: "f";
}
.icon-basic-ban:before {
  content: "g";
}
.icon-basic-battery-charge:before {
  content: "h";
}
.icon-basic-battery-empty:before {
  content: "i";
}
.icon-basic-battery-full:before {
  content: "j";
}
.icon-basic-battery-half:before {
  content: "k";
}
.icon-basic-bolt:before {
  content: "l";
}
.icon-basic-book:before {
  content: "m";
}
.icon-basic-book-pen:before {
  content: "n";
}
.icon-basic-book-pencil:before {
  content: "o";
}
.icon-basic-bookmark:before {
  content: "p";
}
.icon-basic-calculator:before {
  content: "q";
}
.icon-basic-calendar:before {
  content: "r";
}
.icon-basic-cards-diamonds:before {
  content: "s";
}
.icon-basic-cards-hearts:before {
  content: "t";
}
.icon-basic-case:before {
  content: "u";
}
.icon-basic-chronometer:before {
  content: "v";
}
.icon-basic-clessidre:before {
  content: "w";
}
.icon-basic-clock:before {
  content: "x";
}
.icon-basic-clockwise:before {
  content: "y";
}
.icon-basic-cloud:before {
  content: "z";
}
.icon-basic-clubs:before {
  content: "A";
}
.icon-basic-compass:before {
  content: "B";
}
.icon-basic-cup:before {
  content: "C";
}
.icon-basic-diamonds:before {
  content: "D";
}
.icon-basic-display:before {
  content: "E";
}
.icon-basic-download:before {
  content: "F";
}
.icon-basic-exclamation:before {
  content: "G";
}
.icon-basic-eye:before {
  content: "H";
}
.icon-basic-eye-closed:before {
  content: "I";
}
.icon-basic-female:before {
  content: "J";
}
.icon-basic-flag1:before {
  content: "K";
}
.icon-basic-flag2:before {
  content: "L";
}
.icon-basic-floppydisk:before {
  content: "M";
}
.icon-basic-folder:before {
  content: "N";
}
.icon-basic-folder-multiple:before {
  content: "O";
}
.icon-basic-gear:before {
  content: "P";
}
.icon-basic-geolocalize-01:before {
  content: "Q";
}
.icon-basic-geolocalize-05:before {
  content: "R";
}
.icon-basic-globe:before {
  content: "S";
}
.icon-basic-gunsight:before {
  content: "T";
}
.icon-basic-hammer:before {
  content: "U";
}
.icon-basic-headset:before {
  content: "V";
}
.icon-basic-heart:before {
  content: "W";
}
.icon-basic-heart-broken:before {
  content: "X";
}
.icon-basic-helm:before {
  content: "Y";
}
.icon-basic-home:before {
  content: "Z";
}
.icon-basic-info:before {
  content: "0";
}
.icon-basic-ipod:before {
  content: "1";
}
.icon-basic-joypad:before {
  content: "2";
}
.icon-basic-key:before {
  content: "3";
}
.icon-basic-keyboard:before {
  content: "4";
}
.icon-basic-laptop:before {
  content: "5";
}
.icon-basic-life-buoy:before {
  content: "6";
}
.icon-basic-lightbulb:before {
  content: "7";
}
.icon-basic-link:before {
  content: "8";
}
.icon-basic-lock:before {
  content: "9";
}
.icon-basic-lock-open:before {
  content: "!";
}
.icon-basic-magic-mouse:before {
  content: "\"";
}
.icon-basic-magnifier:before {
  content: "#";
}
.icon-basic-magnifier-minus:before {
  content: "$";
}
.icon-basic-magnifier-plus:before {
  content: "%";
}
.icon-basic-mail:before {
  content: "&";
}
.icon-basic-mail-multiple:before {
  content: "'";
}
.icon-basic-mail-open:before {
  content: "(";
}
.icon-basic-mail-open-text:before {
  content: ")";
}
.icon-basic-male:before {
  content: "*";
}
.icon-basic-map:before {
  content: "+";
}
.icon-basic-message:before {
  content: ",";
}
.icon-basic-message-multiple:before {
  content: "-";
}
.icon-basic-message-txt:before {
  content: ".";
}
.icon-basic-mixer2:before {
  content: "/";
}
.icon-basic-mouse:before {
  content: ":";
}
.icon-basic-notebook:before {
  content: ";";
}
.icon-basic-notebook-pen:before {
  content: "<";
}
.icon-basic-notebook-pencil:before {
  content: "=";
}
.icon-basic-paperplane:before {
  content: ">";
}
.icon-basic-pencil-ruler:before {
  content: "?";
}
.icon-basic-pencil-ruler-pen:before {
  content: "@";
}
.icon-basic-photo:before {
  content: "[";
}
.icon-basic-picture:before {
  content: "]";
}
.icon-basic-picture-multiple:before {
  content: "^";
}
.icon-basic-pin1:before {
  content: "_";
}
.icon-basic-pin2:before {
  content: "`";
}
.icon-basic-postcard:before {
  content: "{";
}
.icon-basic-postcard-multiple:before {
  content: "|";
}
.icon-basic-printer:before {
  content: "}";
}
.icon-basic-question:before {
  content: "~";
}
.icon-basic-rss:before {
  content: "\\";
}
.icon-basic-server:before {
  content: "\e000";
}
.icon-basic-server2:before {
  content: "\e001";
}
.icon-basic-server-cloud:before {
  content: "\e002";
}
.icon-basic-server-download:before {
  content: "\e003";
}
.icon-basic-server-upload:before {
  content: "\e004";
}
.icon-basic-settings:before {
  content: "\e005";
}
.icon-basic-share:before {
  content: "\e006";
}
.icon-basic-sheet:before {
  content: "\e007";
}
.icon-basic-sheet-multiple:before {
  content: "\e008";
}
.icon-basic-sheet-pen:before {
  content: "\e009";
}
.icon-basic-sheet-pencil:before {
  content: "\e00a";
}
.icon-basic-sheet-txt:before {
  content: "\e00b";
}
.icon-basic-signs:before {
  content: "\e00c";
}
.icon-basic-smartphone:before {
  content: "\e00d";
}
.icon-basic-spades:before {
  content: "\e00e";
}
.icon-basic-spread:before {
  content: "\e00f";
}
.icon-basic-spread-bookmark:before {
  content: "\e010";
}
.icon-basic-spread-text:before {
  content: "\e011";
}
.icon-basic-spread-text-bookmark:before {
  content: "\e012";
}
.icon-basic-star:before {
  content: "\e013";
}
.icon-basic-tablet:before {
  content: "\e014";
}
.icon-basic-target:before {
  content: "\e015";
}
.icon-basic-todo:before {
  content: "\e016";
}
.icon-basic-todo-pen:before {
  content: "\e017";
}
.icon-basic-todo-pencil:before {
  content: "\e018";
}
.icon-basic-todo-txt:before {
  content: "\e019";
}
.icon-basic-todolist-pen:before {
  content: "\e01a";
}
.icon-basic-todolist-pencil:before {
  content: "\e01b";
}
.icon-basic-trashcan:before {
  content: "\e01c";
}
.icon-basic-trashcan-full:before {
  content: "\e01d";
}
.icon-basic-trashcan-refresh:before {
  content: "\e01e";
}
.icon-basic-trashcan-remove:before {
  content: "\e01f";
}
.icon-basic-upload:before {
  content: "\e020";
}
.icon-basic-usb:before {
  content: "\e021";
}
.icon-basic-video:before {
  content: "\e022";
}
.icon-basic-watch:before {
  content: "\e023";
}
.icon-basic-webpage:before {
  content: "\e024";
}
.icon-basic-webpage-img-txt:before {
  content: "\e025";
}
.icon-basic-webpage-multiple:before {
  content: "\e026";
}
.icon-basic-webpage-txt:before {
  content: "\e027";
}
.icon-basic-world:before {
  content: "\e028";
}

/*
0 - 600px Phone
600px - 900px Tablet portrait
900px - 1200px Table Landscape
1200px - 1800px (Normal desktop styles)
1800px + Big desktop
*/
/*
$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-desktop
*/
/* keyframes used to animate header text movement */
/* Create steps in time */
@-webkit-keyframes moveInLeft {
  /* Start */
  0% {
    opacity: 0;
    /* Animates in X plane */
    transform: translateX(-10rem); }
  /* 80% of animate time */
  /* 1rem moves further to the right */
  80% {
    transform: translateX(1rem); }
  /* End of animation */
  100% {
    opacity: 1;
    /* 0 is its normal position */
    transform: translate(0); } }
@keyframes moveInLeft {
  /* Start */
  0% {
    opacity: 0;
    /* Animates in X plane */
    transform: translateX(-10rem); }
  /* 80% of animate time */
  /* 1rem moves further to the right */
  80% {
    transform: translateX(1rem); }
  /* End of animation */
  100% {
    opacity: 1;
    /* 0 is its normal position */
    transform: translate(0); } }

@-webkit-keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@-webkit-keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* universal selector, selects all elements on page */
/* Add ::after and ::before so all pseudo elements also get these settings */
*,
*::after,
*::before {
  /* removes margins and padding from all elements like headers and paragraphs*/
  margin: 0;
  padding: 0;
  /* This forces anything on page to inherit box-sizing: border-box from the body */
  box-sizing: inherit; }

html {
  /* It's bad practice to set the font-size to a pixel since users can change the font size in their browser.
  16px is default, but we will set it to 10px using a %
  62.5% of 16px is 10px */
  font-size: 62.5%;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (min-width: 112.5em) {
    html {
      font-size: 75%; } }
  @media only screen and (max-width: 75em) {
    html {
      font-size: 56.25%; } }
  @media only screen and (max-width: 56.25em) {
    html {
      font-size: 50%; } }

body {
  /* changes box model so borders and padding are not added to total width or heigh specified for that box*/
  box-sizing: border-box;
  padding: 3rem;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    body {
      padding: 0; } }

::-moz-selection {
  background-color: #55c57a;
  color: #fff; }

::selection {
  background-color: #55c57a;
  color: #fff; }

.u-center-text {
  text-align: center !important; }

.u-margin-bottom-big {
  margin-bottom: 8rem !important;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-big {
      margin-bottom: 5rem !important; } }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-medium {
      margin-bottom: 3rem !important; } }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-top-huge {
  margin-bottom: 10rem !important; }

.u-margin-top-big {
  margin-bottom: 8rem !important; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* Hack: Fixes final shake of animation bug in CSS */
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* Set the animation name and duration */
    -webkit-animation-name: moveInLeft;
            animation-name: moveInLeft;
    -webkit-animation-duration: 1s;
            animation-duration: 1s;
    /* How animation should progress over time */
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
    /* Sets a delay before the animation starts */
    /* iteration-count replays the animation */
    /* animation-delay: 3s;
       animation-iteration-count: 3;
    */
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--main {
        letter-spacing: 1rem;
        font-family: 5rem; } }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    /* Animation Shorthand */
    -webkit-animation: moveInRight 1s ease-out;
            animation: moveInRight 1s ease-out;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--sub {
        letter-spacing: .5rem; } }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .heading-secondary {
      font-size: 3rem; } }
  @media only screen and (max-width: 37.5em) {
    .heading-secondary {
      font-size: 2.5rem; } }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(last-child) {
    margin-bottom: 3rem; }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  opacity: .15;
  z-index: -1;
  overflow: hidden; }
  .bg-video__content {
    height: 100%;
    width: 100%;
    -o-object-fit: cover;
       object-fit: cover; }

.btn {
  /* Make it appear same as original button */
  /* Animate a button */
  /*
&-text:link, &-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .2s;
}

&-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px);
}

&-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0);
}
*/ }
  .btn, .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* Animate all properties */
    transition: all 0.2s;
    /* the btn::after position:absolute property looks for this relative reference */
    position: relative;
    font-size: 1.6rem;
    border: none;
    cursor: pointer; }
  .btn:hover {
    /* Move up */
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* After the button is hovered away from */
    /* nested, would compile to .btn:hover::after */ }
    .btn:hover::after {
      /* Increase element scale */
      transform: scaleX(1.4) scaleY(1.6);
      /* Fade out to invisible */
      opacity: 0; }
  .btn:active,
  .btn .btn:focus {
    outline: none;
    /* Moves down 1px from INITIAL STATE (not hovered state) when clicked */
    transform: translateY(-1px);
    /* Decrease shaow when clicked */
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777;
    /* nested, this would be .btn--white::after*/ }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #55c57a;
    color: #fff; }
  .btn--green::after {
    background-color: #55c57a; }
  .btn::after {
    /* Must specify content property so it apperas */
    content: "";
    /* Must display property for it to display */
    display: inline-block;
    /* 100% of width of the button since ::after acts like a child property */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    /* Put it behind button */
    position: absolute;
    /* This location reference is the first element with a relative position it can find */
    top: 0;
    left: 0;
    /* Defines position of layered elements. -1 puts it behind */
    z-index: -1;
    /* Set transition from original state */
    transition: all 0.4s; }
  .btn--animated {
    /* Move up from below. .75s is a delay */
    -webkit-animation: moveInBottom 0.5s ease-out 0.75s;
            animation: moveInBottom 0.5s ease-out 0.75s;
    /* Applies keyframes 0% styles before animation starts. Otherwise you'd see the element before it animates */
    -webkit-animation-fill-mode: backwards;
            animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all 0.2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text.active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem; }
  .card__side {
    height: 52rem;
    transition: all .8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    border-radius: 3px;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    text-align: center;
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }
  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    .card {
      height: auto;
      border-radius: 3px;
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
      background-color: #fff; }
      .card__side {
        height: auto;
        position: relative;
        box-shadow: none; }
        .card__side--back {
          transform: rotateY(0deg);
          -webkit-clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);
                  clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%); }
      .card:hover .card__side--front {
        transform: rotateY(0); }
      .card__details {
        padding: 1rem 3rem; }
      .card__cta {
        position: relative;
        top: 0%;
        left: 0%;
        transform: translate(0);
        width: 100%;
        padding: 7rem 4rem 4rem 4rem; }
      .card__price-box {
        margin-bottom: 3rem; }
      .card__price-value {
        font-size: 4rem; } }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 56.25em) {
      .composition__photo {
        float: left;
        position: relative;
        width: 33.33333%;
        box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2); } }
    .composition__photo--p1 {
      left: 0;
      top: -2rem;
      /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p1 {
          top: 0;
          transform: scale(1.2); } }
    .composition__photo--p2 {
      right: 0;
      top: 2rem;
      /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p2 {
          top: -1rem;
          transform: scale(1.3);
          z-index: 100; } }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem;
      /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p3 {
          left: 0;
          top: 1rem;
          transform: scale(1.1); } }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      outline-offset: 2rem;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .feature-box {
      padding: 2rem; } }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    color: transparent;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 56.25em) {
      .feature-box__icon {
        margin-bottom: 0; } }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.form__group:not(:last-child) {
  margin-bottom: 2rem; }

.form__input {
  font-family: inherit;
  color: inherit;
  font-size: 1.5rem;
  padding: 1.5rem 2rem;
  border-radius: 2px;
  background-color: rgba(255, 255, 255, 0.5);
  border: none;
  border-bottom: 3px solid transparent;
  width: 90%;
  display: block;
  transition: all .3s;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .form__input {
      width: 100%; } }
  .form__input:focus {
    outline: none;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
    border-bottom: 3px solid #55c57a; }
  .form__input:focus:invalid {
    border-bottom: 3px solid #ff7730; }
  .form__input::-webkit-input-placeholder {
    color: #999; }

.form__label {
  font-size: 1.2rem;
  font-weight: 700;
  display: block;
  margin-left: 2rem;
  margin-top: .7rem;
  transition: all .3s; }

.form__input:-moz-placeholder-shown + .form__label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem); }

.form__input:-ms-input-placeholder + .form__label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem); }

.form__input:placeholder-shown + .form__label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem); }

.form__radio-group {
  width: 49%;
  display: inline-block;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .form__radio-group {
      width: 100%;
      margin-bottom: 2rem; } }

.form__radio-input {
  display: none; }

.form__radio-label {
  font-size: 1.6rem;
  cursor: pointer;
  position: relative;
  padding-left: 5rem; }

.form__radio-button {
  height: 3rem;
  width: 3rem;
  display: inline-block;
  border: 5px solid #55c57a;
  border-radius: 50%;
  position: absolute;
  top: -.4rem;
  left: 0; }
  .form__radio-button::after {
    content: "";
    display: block;
    height: 1.3rem;
    width: 1.3rem;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #55c57a;
    opacity: 0;
    transition: opacity .2s; }

.form__radio-input:checked ~ .form__radio-label .form__radio-button::after {
  opacity: 1; }

.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.8);
  z-index: 9999;
  opacity: 0;
  visibility: hidden;
  transition: all .3s; }
  @supports ((-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px))) {
    .popup {
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
      background-color: rgba(255, 255, 255, 0.3); } }
  .popup__content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 75%;
    background-color: #fff;
    box-shadow: 0 2rem 4rem rgab(#000, 0.2);
    border-radius: 3px;
    display: table;
    overflow: hidden;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
    transition: all .4s .2s; }
  .popup__left {
    width: 33.33333%;
    display: table-cell; }
  .popup__right {
    width: 66.66666%;
    display: table-cell;
    vertical-align: middle;
    padding: 3rem 5rem; }
  .popup__img {
    display: block;
    width: 100%; }
  .popup__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid #eee;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid #eee;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto; }
  .popup:target {
    opacity: 1;
    visibility: visible; }
  .popup:target .popup__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); }
  .popup__close:link, .popup__close:visited {
    color: #777;
    position: absolute;
    top: 2.5rem;
    right: 2.5rem;
    font-size: 3rem;
    text-decoration: none;
    display: inline-block;
    transition: all .2s;
    line-height: 1; }
  .popup__close:hover {
    color: #55c57a; }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg);
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .story {
      width: 100%;
      padding: 5rem;
      padding-left: 7rem; } }
  @media only screen and (max-width: 37.5em) {
    .story {
      transform: skewX(0); } }
  .story__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    shape-outside: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg);
    position: relative;
    overflow: hidden;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @supports ((-webkit-clip-path: polygon(0 0)) or (clip-path: polygon(0 0))) or (-webkit-clip-path: polygon(0 0)) {
      .story__shape {
        -webkit-clip-path: circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%); } }
    @media only screen and (max-width: 37.5em) {
      .story__shape {
        transform: skewX(0); } }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    transition: all .5s; }
  .story__text {
    transform: skewX(12deg);
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 37.5em) {
      .story__text {
        transform: skewX(0); } }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: #fff;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all .5s;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }

.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #f7f7f7;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .footer {
      padding: 8rem 0; } }
  .footer__logo-box {
    text-align: center;
    margin-bottom: 8rem;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 56.25em) {
      .footer__logo-box {
        margin-bottom: 6rem; } }
  .footer__logo {
    width: 15rem;
    height: auto; }
  .footer__navigation {
    border-top: 1px solid #777;
    padding-top: 2rem;
    display: inline-block;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 56.25em) {
      .footer__navigation {
        width: 100%;
        text-align: center; } }
  .footer__list {
    list-style: none; }
  .footer__item {
    display: inline-block; }
    .footer__item:not(:last-child) {
      margin-right: 1.5rem; }
  .footer__link:link, .footer__link:visited {
    color: #f7f7f7;
    background-color: #333;
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    transition: all .2s; }
  .footer__link:hover, .footer__link:active {
    color: #55c57a;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
    transform: rotate(5deg) scale(1.3); }
  .footer__copyright {
    border-top: 1px solid #777;
    padding-top: 2rem;
    width: 80%;
    float: right;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 56.25em) {
      .footer__copyright {
        width: 80%;
        float: none; } }

.header {
  /* This box should be 85% of viewport so user can see the header continues the page*/
  height: 85vh;
  /* gradient, comma, then image */
  /* hex codes for rgba only work in SASS */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero-small.jpg);
  /* takes up full width of viewport */
  background-size: cover;
  /* top of image will always stay at top of screen when resizing */
  background-position: top;
  /* must set to relative so you can position logo as absolute */
  position: relative;
  /*
  @media (min-resolution: 192dpi) and (min-width: 37.5em) {
    background-image: linear-gradient(to right bottom, rgba($color-secondary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../img/hero.jpg);
  }

//display highres image if screen size is OVER 2000
  @media (min-width: 125em) {
    background-image: linear-gradient(to right bottom, rgba($color-secondary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../img/hero.jpg);
  }
*/
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
  /* use & for any sub-declarations that mention .header */
  /* write this instead of a .header__logo-box section
this compiles into a .header__logo-box section in CSS */ }
  @supports ((-webkit-clip-path: polygon(0 0)) or (clip-path: polygon(0 0))) or (-webkit-clip-path: polygon(0 0)) {
    .header {
      /* clip-path changes shape of image by adjusting 4 corners using x y values */
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
      height: 95vh; } }
  @media only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 600px), only screen and (min-resolution: 192dpi) and (min-width: 600px), only screen and (min-width: 2000px) {
    .header {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.8), rgba(255, 119, 48, 0.8)), url(../img/hero.jpg); } }
  @media only screen and (max-width: 37.5em) {
    .header {
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
      clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%); } }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    /* size of logo, width scales automatically */
    height: 3.5rem; }
  .header__text-box {
    /* to center */
    position: absolute;
    /* the top and left value position from the parent element, so they are not visually centered*/
    top: 40%;
    left: 50%;
    /* this centers the element visually by adjusting 50% of the element, not the parent*/
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  /* 1140px / 10 = 114 rem */
  max-width: 114rem;
  /* center block element inside another block element */
  margin: 0 auto;
  /* remove margin from last row using not pseudo class */
  /*  The not pseudo class selects everything except the last child */
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  .row:not(:last-child) {
    margin-bottom: 8rem;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 56.25em) {
      .row:not(:last-child) {
        margin-bottom: 6rem; } }
  @media only screen and (max-width: 56.25em) {
    .row {
      max-width: 50rem;
      padding: 0 3rem; } }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left;
    /*since gutter is only applied to the right of an element the
    you must remove the gutter from the element all the way on the right */
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem;
      /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
      @media only screen and (max-width: 56.25em) {
        .row [class^="col-"]:not(:last-child) {
          margin-right: 0;
          margin-bottom: 6rem; } }
    @media only screen and (max-width: 56.25em) {
      .row [class^="col-"] {
        width: 100% !important; } }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-3 {
    width: calc((2 * (100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-2-of-4 {
    width: calc((2 * (100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc((3 * (100% - 3 * 6rem) / 4) + 2 * 6rem); }

.navigation__checkbox {
  display: none; }

.navigation__button {
  background-color: #fff;
  height: 7rem;
  width: 7rem;
  position: fixed;
  top: 6rem;
  right: 6rem;
  border-radius: 50%;
  z-index: 2000;
  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);
  cursor: pointer;
  text-align: center;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .navigation__button {
      top: 4rem;
      right: 4rem; } }
  @media only screen and (max-width: 37.5em) {
    .navigation__button {
      top: 3.5rem;
      right: 3.5rem; } }

.navigation__background {
  height: 6rem;
  width: 6rem;
  border-radius: 50%;
  position: fixed;
  top: 6.5rem;
  right: 6.5rem;
  background-image: radial-gradient(#7ed56f, #28b485);
  z-index: 1000;
  transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .navigation__background {
      top: 4.5rem;
      right: 4.5rem; } }
  @media only screen and (max-width: 37.5em) {
    .navigation__background {
      top: 3.5rem;
      right: 3.5rem; } }

.navigation__nav {
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1500;
  opacity: 0;
  width: 0;
  transition: all 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55); }

.navigation__list {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  list-style: none;
  text-align: center;
  width: 100%; }

.navigation__item {
  margin: 1rem; }

.navigation__link:link, .navigation__link:visited {
  display: inline-block;
  font-size: 3rem;
  font-weight: 300;
  padding: 1rem 2rem;
  color: #fff;
  text-decoration: none;
  text-transform: uppercase;
  background-image: linear-gradient(120deg, transparent 0%, transparent 50%, #fff 50%);
  background-size: 220%;
  transition: all .4s; }
  .navigation__link:link span, .navigation__link:visited span {
    margin-right: 1.5rem;
    display: inline-block; }

.navigation__link:hover, .navigation__link:active {
  background-position: 100%;
  color: #55c57a;
  transform: translateX(1rem); }

.navigation__checkbox:checked ~ .navigation__background {
  transform: scale(80); }

.navigation__checkbox:checked ~ .navigation__nav {
  opacity: 1;
  width: 100%; }

.navigation__icon {
  position: relative;
  margin-top: 3.5rem; }
  .navigation__icon, .navigation__icon::before, .navigation__icon::after {
    width: 3rem;
    height: 2px;
    background-color: #333;
    display: inline-block; }
  .navigation__icon::before, .navigation__icon::after {
    content: "";
    position: absolute;
    left: 0;
    transition: all .2s; }
  .navigation__icon::before {
    top: -.8rem; }
  .navigation__icon::after {
    top: .8rem; }

.navigation__button:hover .navigation__icon::before {
  top: -1rem; }

.navigation__button:hover .navigation__icon::after {
  top: 1rem; }

.navigation__checkbox:checked + .navigation__button .navigation__icon {
  background-color: transparent; }

.navigation__checkbox:checked + .navigation__button .navigation__icon::before {
  transform: rotate(135deg);
  top: 0; }

.navigation__checkbox:checked + .navigation__button .navigation__icon::after {
  transform: rotate(-135deg);
  top: 0; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .section-about {
      padding: 20rem 0; } }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../../img/nat-4.jpg);
  background-size: cover;
  margin-top: -13rem;
  transform: skewY(-7deg);
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  .section-features > * {
    transform: skewY(7deg); }
  @media only screen and (max-width: 56.25em) {
    .section-features {
      padding: 10rem 0; } }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -12rem;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .section-tours {
      padding: 20rem 0 10rem 0; } }

.section-stories {
  position: relative;
  padding: 15rem 0;
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .section-stories {
      padding: 10rem 0; } }

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 56.25em) {
    .section-book {
      padding: 10rem 0; } }

.book {
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  background-size: 100%;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.25);
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
  /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
  @media only screen and (max-width: 75em) {
    .book {
      background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 65%, transparent 65%), url(../img/nat-10.jpg);
      background-size: cover; } }
  @media only screen and (max-width: 56.25em) {
    .book {
      background-image: linear-gradient(to right, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 100%), url(../img/nat-10.jpg); } }
  .book__form {
    width: 50%;
    padding: 6rem;
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */
    /*
  If the breakpoint is called phone, the following media query is used
   @content allows you to pass blocks of code from other CSS pages into this mixin
   Use relative unit for media query-not pixels
   ems and rems not affected by html: font-size setting
   1 rem or em is equal to default of the browser, so if a user changes the browser default, it changes the media query

   ems if the best option sinces rems don't work in all browsers
   1em = 16px;
   
   1800/16 = 112.5
   1200/16 = 75
   900/16 = 56.25
   600/16 = 37.5
   
   These values will be adapated to font size user sets for the browser

   ORDER to put code in:
   Base + Typography > general layout + grid > page layouts > components
   */ }
    @media only screen and (max-width: 75em) {
      .book__form {
        width: 65%; } }
    @media only screen and (max-width: 56.25em) {
      .book__form {
        width: 100%; } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLmNvbmNhdC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCOztBQUVoQjtFQUNFLDZCQUE2QjtFQUM3QixtQ0FBbUM7RUFDbkM7OztnRUFHOEQ7RUFDOUQsbUJBQW1CO0VBQ25CLGtCQUFrQjs7QUFFcEI7O0FBRUE7RUFDRSx3Q0FBd0M7RUFDeEMsd0JBQXdCO0VBQ3hCLDZCQUE2QjtFQUM3Qiw4QkFBOEI7RUFDOUIsK0JBQStCO0VBQy9CLCtCQUErQjtFQUMvQixXQUFXO0VBQ1gsY0FBYztFQUNkLG1DQUFtQztFQUNuQyxrQ0FBa0M7QUFDcEM7O0FBRUE7O0VBRUUsd0NBQXdDO0VBQ3hDLDZCQUE2QjtFQUM3Qiw4QkFBOEI7RUFDOUIsK0JBQStCO0VBQy9CLCtCQUErQjtFQUMvQixXQUFXO0VBQ1gsY0FBYztFQUNkLG1DQUFtQztFQUNuQyxrQ0FBa0M7QUFDcEM7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxn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Qy9ILHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsdUJBQXVCO0VBQ3ZCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbUJFLEVBQUU7RUFDSjtJQUNFLHNCQUFzQixFQUFFO0VBQzFCO0lBQ0U7TUFDRSxnQkFBZ0IsRUFBRSxFQUFFOztBQUUxQjtFQUNFLHlCQUF5QjtFQUN6Qix3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbUJFLEVBQUU7RUFDSjtJQUNFO01BQ0Usd0JBQXdCLEVBQUUsRUFBRTs7QUFFbEM7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbUJFLEVBQUU7RUFDSjtJQUNFO01BQ0UsZ0JBQWdCLEVBQUUsRUFBRTs7QUFFMUI7RUFDRSxnQkFBZ0I7RUFDaEIsb0VBQW9FO0VBQ3BFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbUJFLEVBQUU7RUFDSjtJQUNFO01BQ0UsZ0JBQWdCLEVBQUUsRUFBRTs7QUFFMUI7RUFDRSw2SUFBNkk7RUFDN0kscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQiw2Q0FBNkM7RUFDN0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFtQkU7RUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW1CRSxFQUFFO0VBQ0o7SUFDRTtNQUNFLDZJQUE2STtNQUM3SSxzQkFBc0IsRUFBRSxFQUFFO0VBQzlCO0lBQ0U7TUFDRSwrSEFBK0gsRUFBRSxFQUFFO0VBQ3ZJO0lBQ0UsVUFBVTtJQUNWLGFBQWE7SUFDYjs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW1CQTtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBbUJBLEVBQUU7SUFDRjtNQUNFO1FBQ0UsVUFBVSxFQUFFLEVBQUU7SUFDbEI7TUFDRTtRQUNFLFdBQVcsRUFBRSxFQUFFIiwiZmlsZSI6InN0eWxlLnByZWZpeC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJsaW5lYS1iYXNpYy0xMFwiO1xuICBzcmM6dXJsKFwiZm9udHMvbGluZWEtYmFzaWMtMTAuZW90XCIpO1xuICBzcmM6dXJsKFwiZm9udHMvbGluZWEtYmFzaWMtMTAuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSxcbiAgICB1cmwoXCJmb250cy9saW5lYS1iYXNpYy0xMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksXG4gICAgdXJsKFwiZm9udHMvbGluZWEtYmFzaWMtMTAudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLFxuICAgIHVybChcImZvbnRzL2xpbmVhLWJhc2ljLTEwLnN2ZyNsaW5lYS1iYXNpYy0xMFwiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcblxufVxuXG5bZGF0YS1pY29uXTpiZWZvcmUge1xuICBmb250LWZhbWlseTogXCJsaW5lYS1iYXNpYy0xMFwiICFpbXBvcnRhbnQ7XG4gIGNvbnRlbnQ6IGF0dHIoZGF0YS1pY29uKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsICFpbXBvcnRhbnQ7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWwgIWltcG9ydGFudDtcbiAgZm9udC12YXJpYW50OiBub3JtYWwgIWltcG9ydGFudDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDtcbiAgc3BlYWs6IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cblxuW2NsYXNzXj1cImljb24tXCJdOmJlZm9yZSxcbltjbGFzcyo9XCIgaWNvbi1cIl06YmVmb3JlIHtcbiAgZm9udC1mYW1pbHk6IFwibGluZWEtYmFzaWMtMTBcIiAhaW1wb3J0YW50O1xuICBmb250LXN0eWxlOiBub3JtYWwgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbCAhaW1wb3J0YW50O1xuICBmb250LXZhcmlhbnQ6IG5vcm1hbCAhaW1wb3J0YW50O1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZSAhaW1wb3J0YW50O1xuICBzcGVhazogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG4uaWNvbi1iYXNpYy1hY2NlbGVyYXRvcjpiZWZvcmUge1xuICBjb250ZW50OiBcImFcIjtcbn1cbi5pY29uLWJhc2ljLWFsYXJtOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiYlwiO1xufVxuLmljb24tYmFzaWMtYW5jaG9yOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiY1wiO1xufVxuLmljb24tYmFzaWMtYW50aWNsb2Nrd2lzZTpiZWZvcmUge1xuICBjb250ZW50OiBcImRcIjtcbn1cbi5pY29uLWJhc2ljLWFyY2hpdmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJlXCI7XG59XG4uaWNvbi1iYXNpYy1hcmNoaXZlLWZ1bGw6YmVmb3JlIHtcbiAgY29udGVudDogXCJmXCI7XG59XG4uaWNvbi1iYXNpYy1iYW46YmVmb3JlIHtcbiAgY29udGVudDogXCJnXCI7XG59XG4uaWNvbi1iYXNpYy1iYXR0ZXJ5LWNoYXJnZTpiZWZvcmUge1xuICBjb250ZW50OiBcImhcIjtcbn1cbi5pY29uLWJhc2ljLWJhdHRlcnktZW1wdHk6YmVmb3JlIHtcbiAgY29udGVudDogXCJpXCI7XG59XG4uaWNvbi1iYXNpYy1iYXR0ZXJ5LWZ1bGw6YmVmb3JlIHtcbiAgY29udGVudDogXCJqXCI7XG59XG4uaWNvbi1iYXNpYy1iYXR0ZXJ5LWhhbGY6YmVmb3JlIHtcbiAgY29udGVudDogXCJrXCI7XG59XG4uaWNvbi1iYXNpYy1ib2x0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwibFwiO1xufVxuLmljb24tYmFzaWMtYm9vazpiZWZvcmUge1xuICBjb250ZW50OiBcIm1cIjtcbn1cbi5pY29uLWJhc2ljLWJvb2stcGVuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiblwiO1xufVxuLmljb24tYmFzaWMtYm9vay1wZW5jaWw6YmVmb3JlIHtcbiAgY29udGVudDogXCJvXCI7XG59XG4uaWNvbi1iYXNpYy1ib29rbWFyazpiZWZvcmUge1xuICBjb250ZW50OiBcInBcIjtcbn1cbi5pY29uLWJhc2ljLWNhbGN1bGF0b3I6YmVmb3JlIHtcbiAgY29udGVudDogXCJxXCI7XG59XG4uaWNvbi1iYXNpYy1jYWxlbmRhcjpiZWZvcmUge1xuICBjb250ZW50OiBcInJcIjtcbn1cbi5pY29uLWJhc2ljLWNhcmRzLWRpYW1vbmRzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwic1wiO1xufVxuLmljb24tYmFzaWMtY2FyZHMtaGVhcnRzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwidFwiO1xufVxuLmljb24tYmFzaWMtY2FzZTpiZWZvcmUge1xuICBjb250ZW50OiBcInVcIjtcbn1cbi5pY29uLWJhc2ljLWNocm9ub21ldGVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwidlwiO1xufVxuLmljb24tYmFzaWMtY2xlc3NpZHJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwid1wiO1xufVxuLmljb24tYmFzaWMtY2xvY2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJ4XCI7XG59XG4uaWNvbi1iYXNpYy1jbG9ja3dpc2U6YmVmb3JlIHtcbiAgY29udGVudDogXCJ5XCI7XG59XG4uaWNvbi1iYXNpYy1jbG91ZDpiZWZvcmUge1xuICBjb250ZW50OiBcInpcIjtcbn1cbi5pY29uLWJhc2ljLWNsdWJzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiQVwiO1xufVxuLmljb24tYmFzaWMtY29tcGFzczpiZWZvcmUge1xuICBjb250ZW50OiBcIkJcIjtcbn1cbi5pY29uLWJhc2ljLWN1cDpiZWZvcmUge1xuICBjb250ZW50OiBcIkNcIjtcbn1cbi5pY29uLWJhc2ljLWRpYW1vbmRzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiRFwiO1xufVxuLmljb24tYmFzaWMtZGlzcGxheTpiZWZvcmUge1xuICBjb250ZW50OiBcIkVcIjtcbn1cbi5pY29uLWJhc2ljLWRvd25sb2FkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiRlwiO1xufVxuLmljb24tYmFzaWMtZXhjbGFtYXRpb246YmVmb3JlIHtcbiAgY29udGVudDogXCJHXCI7XG59XG4uaWNvbi1iYXNpYy1leWU6YmVmb3JlIHtcbiAgY29udGVudDogXCJIXCI7XG59XG4uaWNvbi1iYXNpYy1leWUtY2xvc2VkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSVwiO1xufVxuLmljb24tYmFzaWMtZmVtYWxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiSlwiO1xufVxuLmljb24tYmFzaWMtZmxhZzE6YmVmb3JlIHtcbiAgY29udGVudDogXCJLXCI7XG59XG4uaWNvbi1iYXNpYy1mbGFnMjpiZWZvcmUge1xuICBjb250ZW50OiBcIkxcIjtcbn1cbi5pY29uLWJhc2ljLWZsb3BweWRpc2s6YmVmb3JlIHtcbiAgY29udGVudDogXCJNXCI7XG59XG4uaWNvbi1iYXNpYy1mb2xkZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJOXCI7XG59XG4uaWNvbi1iYXNpYy1mb2xkZXItbXVsdGlwbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJPXCI7XG59XG4uaWNvbi1iYXNpYy1nZWFyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiUFwiO1xufVxuLmljb24tYmFzaWMtZ2VvbG9jYWxpemUtMDE6YmVmb3JlIHtcbiAgY29udGVudDogXCJRXCI7XG59XG4uaWNvbi1iYXNpYy1nZW9sb2NhbGl6ZS0wNTpiZWZvcmUge1xuICBjb250ZW50OiBcIlJcIjtcbn1cbi5pY29uLWJhc2ljLWdsb2JlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiU1wiO1xufVxuLmljb24tYmFzaWMtZ3Vuc2lnaHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJUXCI7XG59XG4uaWNvbi1iYXNpYy1oYW1tZXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJVXCI7XG59XG4uaWNvbi1iYXNpYy1oZWFkc2V0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiVlwiO1xufVxuLmljb24tYmFzaWMtaGVhcnQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJXXCI7XG59XG4uaWNvbi1iYXNpYy1oZWFydC1icm9rZW46YmVmb3JlIHtcbiAgY29udGVudDogXCJYXCI7XG59XG4uaWNvbi1iYXNpYy1oZWxtOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiWVwiO1xufVxuLmljb24tYmFzaWMtaG9tZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlpcIjtcbn1cbi5pY29uLWJhc2ljLWluZm86YmVmb3JlIHtcbiAgY29udGVudDogXCIwXCI7XG59XG4uaWNvbi1iYXNpYy1pcG9kOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiMVwiO1xufVxuLmljb24tYmFzaWMtam95cGFkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiMlwiO1xufVxuLmljb24tYmFzaWMta2V5OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiM1wiO1xufVxuLmljb24tYmFzaWMta2V5Ym9hcmQ6YmVmb3JlIHtcbiAgY29udGVudDogXCI0XCI7XG59XG4uaWNvbi1iYXNpYy1sYXB0b3A6YmVmb3JlIHtcbiAgY29udGVudDogXCI1XCI7XG59XG4uaWNvbi1iYXNpYy1saWZlLWJ1b3k6YmVmb3JlIHtcbiAgY29udGVudDogXCI2XCI7XG59XG4uaWNvbi1iYXNpYy1saWdodGJ1bGI6YmVmb3JlIHtcbiAgY29udGVudDogXCI3XCI7XG59XG4uaWNvbi1iYXNpYy1saW5rOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiOFwiO1xufVxuLmljb24tYmFzaWMtbG9jazpiZWZvcmUge1xuICBjb250ZW50OiBcIjlcIjtcbn1cbi5pY29uLWJhc2ljLWxvY2stb3BlbjpiZWZvcmUge1xuICBjb250ZW50OiBcIiFcIjtcbn1cbi5pY29uLWJhc2ljLW1hZ2ljLW1vdXNlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxcIlwiO1xufVxuLmljb24tYmFzaWMtbWFnbmlmaWVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiI1wiO1xufVxuLmljb24tYmFzaWMtbWFnbmlmaWVyLW1pbnVzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiJFwiO1xufVxuLmljb24tYmFzaWMtbWFnbmlmaWVyLXBsdXM6YmVmb3JlIHtcbiAgY29udGVudDogXCIlXCI7XG59XG4uaWNvbi1iYXNpYy1tYWlsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiJlwiO1xufVxuLmljb24tYmFzaWMtbWFpbC1tdWx0aXBsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIidcIjtcbn1cbi5pY29uLWJhc2ljLW1haWwtb3BlbjpiZWZvcmUge1xuICBjb250ZW50OiBcIihcIjtcbn1cbi5pY29uLWJhc2ljLW1haWwtb3Blbi10ZXh0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiKVwiO1xufVxuLmljb24tYmFzaWMtbWFsZTpiZWZvcmUge1xuICBjb250ZW50OiBcIipcIjtcbn1cbi5pY29uLWJhc2ljLW1hcDpiZWZvcmUge1xuICBjb250ZW50OiBcIitcIjtcbn1cbi5pY29uLWJhc2ljLW1lc3NhZ2U6YmVmb3JlIHtcbiAgY29udGVudDogXCIsXCI7XG59XG4uaWNvbi1iYXNpYy1tZXNzYWdlLW11bHRpcGxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiLVwiO1xufVxuLmljb24tYmFzaWMtbWVzc2FnZS10eHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCIuXCI7XG59XG4uaWNvbi1iYXNpYy1taXhlcjI6YmVmb3JlIHtcbiAgY29udGVudDogXCIvXCI7XG59XG4uaWNvbi1iYXNpYy1tb3VzZTpiZWZvcmUge1xuICBjb250ZW50OiBcIjpcIjtcbn1cbi5pY29uLWJhc2ljLW5vdGVib29rOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiO1wiO1xufVxuLmljb24tYmFzaWMtbm90ZWJvb2stcGVuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiPFwiO1xufVxuLmljb24tYmFzaWMtbm90ZWJvb2stcGVuY2lsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiPVwiO1xufVxuLmljb24tYmFzaWMtcGFwZXJwbGFuZTpiZWZvcmUge1xuICBjb250ZW50OiBcIj5cIjtcbn1cbi5pY29uLWJhc2ljLXBlbmNpbC1ydWxlcjpiZWZvcmUge1xuICBjb250ZW50OiBcIj9cIjtcbn1cbi5pY29uLWJhc2ljLXBlbmNpbC1ydWxlci1wZW46YmVmb3JlIHtcbiAgY29udGVudDogXCJAXCI7XG59XG4uaWNvbi1iYXNpYy1waG90bzpiZWZvcmUge1xuICBjb250ZW50OiBcIltcIjtcbn1cbi5pY29uLWJhc2ljLXBpY3R1cmU6YmVmb3JlIHtcbiAgY29udGVudDogXCJdXCI7XG59XG4uaWNvbi1iYXNpYy1waWN0dXJlLW11bHRpcGxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXlwiO1xufVxuLmljb24tYmFzaWMtcGluMTpiZWZvcmUge1xuICBjb250ZW50OiBcIl9cIjtcbn1cbi5pY29uLWJhc2ljLXBpbjI6YmVmb3JlIHtcbiAgY29udGVudDogXCJgXCI7XG59XG4uaWNvbi1iYXNpYy1wb3N0Y2FyZDpiZWZvcmUge1xuICBjb250ZW50OiBcIntcIjtcbn1cbi5pY29uLWJhc2ljLXBvc3RjYXJkLW11bHRpcGxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwifFwiO1xufVxuLmljb24tYmFzaWMtcHJpbnRlcjpiZWZvcmUge1xuICBjb250ZW50OiBcIn1cIjtcbn1cbi5pY29uLWJhc2ljLXF1ZXN0aW9uOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiflwiO1xufVxuLmljb24tYmFzaWMtcnNzOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxcXFwiO1xufVxuLmljb24tYmFzaWMtc2VydmVyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDAwXCI7XG59XG4uaWNvbi1iYXNpYy1zZXJ2ZXIyOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDAxXCI7XG59XG4uaWNvbi1iYXNpYy1zZXJ2ZXItY2xvdWQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMDJcIjtcbn1cbi5pY29uLWJhc2ljLXNlcnZlci1kb3dubG9hZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAwM1wiO1xufVxuLmljb24tYmFzaWMtc2VydmVyLXVwbG9hZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAwNFwiO1xufVxuLmljb24tYmFzaWMtc2V0dGluZ3M6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMDVcIjtcbn1cbi5pY29uLWJhc2ljLXNoYXJlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDA2XCI7XG59XG4uaWNvbi1iYXNpYy1zaGVldDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAwN1wiO1xufVxuLmljb24tYmFzaWMtc2hlZXQtbXVsdGlwbGU6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMDhcIjtcbn1cbi5pY29uLWJhc2ljLXNoZWV0LXBlbjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAwOVwiO1xufVxuLmljb24tYmFzaWMtc2hlZXQtcGVuY2lsOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDBhXCI7XG59XG4uaWNvbi1iYXNpYy1zaGVldC10eHQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMGJcIjtcbn1cbi5pY29uLWJhc2ljLXNpZ25zOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDBjXCI7XG59XG4uaWNvbi1iYXNpYy1zbWFydHBob25lOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDBkXCI7XG59XG4uaWNvbi1iYXNpYy1zcGFkZXM6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMGVcIjtcbn1cbi5pY29uLWJhc2ljLXNwcmVhZDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAwZlwiO1xufVxuLmljb24tYmFzaWMtc3ByZWFkLWJvb2ttYXJrOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDEwXCI7XG59XG4uaWNvbi1iYXNpYy1zcHJlYWQtdGV4dDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAxMVwiO1xufVxuLmljb24tYmFzaWMtc3ByZWFkLXRleHQtYm9va21hcms6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMTJcIjtcbn1cbi5pY29uLWJhc2ljLXN0YXI6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMTNcIjtcbn1cbi5pY29uLWJhc2ljLXRhYmxldDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAxNFwiO1xufVxuLmljb24tYmFzaWMtdGFyZ2V0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDE1XCI7XG59XG4uaWNvbi1iYXNpYy10b2RvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDE2XCI7XG59XG4uaWNvbi1iYXNpYy10b2RvLXBlbjpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAxN1wiO1xufVxuLmljb24tYmFzaWMtdG9kby1wZW5jaWw6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMThcIjtcbn1cbi5pY29uLWJhc2ljLXRvZG8tdHh0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDE5XCI7XG59XG4uaWNvbi1iYXNpYy10b2RvbGlzdC1wZW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMWFcIjtcbn1cbi5pY29uLWJhc2ljLXRvZG9saXN0LXBlbmNpbDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAxYlwiO1xufVxuLmljb24tYmFzaWMtdHJhc2hjYW46YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMWNcIjtcbn1cbi5pY29uLWJhc2ljLXRyYXNoY2FuLWZ1bGw6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMWRcIjtcbn1cbi5pY29uLWJhc2ljLXRyYXNoY2FuLXJlZnJlc2g6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMWVcIjtcbn1cbi5pY29uLWJhc2ljLXRyYXNoY2FuLXJlbW92ZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAxZlwiO1xufVxuLmljb24tYmFzaWMtdXBsb2FkOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDIwXCI7XG59XG4uaWNvbi1iYXNpYy11c2I6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMjFcIjtcbn1cbi5pY29uLWJhc2ljLXZpZGVvOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDIyXCI7XG59XG4uaWNvbi1iYXNpYy13YXRjaDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAyM1wiO1xufVxuLmljb24tYmFzaWMtd2VicGFnZTpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAyNFwiO1xufVxuLmljb24tYmFzaWMtd2VicGFnZS1pbWctdHh0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDI1XCI7XG59XG4uaWNvbi1iYXNpYy13ZWJwYWdlLW11bHRpcGxlOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXFxlMDI2XCI7XG59XG4uaWNvbi1iYXNpYy13ZWJwYWdlLXR4dDpiZWZvcmUge1xuICBjb250ZW50OiBcIlxcZTAyN1wiO1xufVxuLmljb24tYmFzaWMtd29ybGQ6YmVmb3JlIHtcbiAgY29udGVudDogXCJcXGUwMjhcIjtcbn1cblxuLypcclxuMCAtIDYwMHB4IFBob25lXHJcbjYwMHB4IC0gOTAwcHggVGFibGV0IHBvcnRyYWl0XHJcbjkwMHB4IC0gMTIwMHB4IFRhYmxlIExhbmRzY2FwZVxyXG4xMjAwcHggLSAxODAwcHggKE5vcm1hbCBkZXNrdG9wIHN0eWxlcylcclxuMTgwMHB4ICsgQmlnIGRlc2t0b3BcclxuKi9cbi8qXHJcbiRicmVha3BvaW50IGFyZ3VtZW50IGNob2ljZXM6XHJcbi0gcGhvbmVcclxuLSB0YWItcG9ydFxyXG4tIHRhYi1sYW5kXHJcbi0gYmlnLWRlc2t0b3BcclxuKi9cbi8qIGtleWZyYW1lcyB1c2VkIHRvIGFuaW1hdGUgaGVhZGVyIHRleHQgbW92ZW1lbnQgKi9cbi8qIENyZWF0ZSBzdGVwcyBpbiB0aW1lICovXG5Aa2V5ZnJhbWVzIG1vdmVJbkxlZnQge1xuICAvKiBTdGFydCAqL1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAvKiBBbmltYXRlcyBpbiBYIHBsYW5lICovXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMHJlbSk7IH1cbiAgLyogODAlIG9mIGFuaW1hdGUgdGltZSAqL1xuICAvKiAxcmVtIG1vdmVzIGZ1cnRoZXIgdG8gdGhlIHJpZ2h0ICovXG4gIDgwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDFyZW0pOyB9XG4gIC8qIEVuZCBvZiBhbmltYXRpb24gKi9cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAvKiAwIGlzIGl0cyBub3JtYWwgcG9zaXRpb24gKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTsgfSB9XG5cbkBrZXlmcmFtZXMgbW92ZUluUmlnaHQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTByZW0pOyB9XG4gIDgwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xcmVtKTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDApOyB9IH1cblxuQGtleWZyYW1lcyBtb3ZlSW5Cb3R0b20ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoM3JlbSk7IH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwKTsgfSB9XG5cbi8qIHVuaXZlcnNhbCBzZWxlY3Rvciwgc2VsZWN0cyBhbGwgZWxlbWVudHMgb24gcGFnZSAqL1xuLyogQWRkIDo6YWZ0ZXIgYW5kIDo6YmVmb3JlIHNvIGFsbCBwc2V1ZG8gZWxlbWVudHMgYWxzbyBnZXQgdGhlc2Ugc2V0dGluZ3MgKi9cbiosXG4qOjphZnRlcixcbio6OmJlZm9yZSB7XG4gIC8qIHJlbW92ZXMgbWFyZ2lucyBhbmQgcGFkZGluZyBmcm9tIGFsbCBlbGVtZW50cyBsaWtlIGhlYWRlcnMgYW5kIHBhcmFncmFwaHMqL1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIC8qIFRoaXMgZm9yY2VzIGFueXRoaW5nIG9uIHBhZ2UgdG8gaW5oZXJpdCBib3gtc2l6aW5nOiBib3JkZXItYm94IGZyb20gdGhlIGJvZHkgKi9cbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG5odG1sIHtcbiAgLyogSXQncyBiYWQgcHJhY3RpY2UgdG8gc2V0IHRoZSBmb250LXNpemUgdG8gYSBwaXhlbCBzaW5jZSB1c2VycyBjYW4gY2hhbmdlIHRoZSBmb250IHNpemUgaW4gdGhlaXIgYnJvd3Nlci5cclxuICAxNnB4IGlzIGRlZmF1bHQsIGJ1dCB3ZSB3aWxsIHNldCBpdCB0byAxMHB4IHVzaW5nIGEgJVxyXG4gIDYyLjUlIG9mIDE2cHggaXMgMTBweCAqL1xuICBmb250LXNpemU6IDYyLjUlO1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqL1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqL1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTEyLjVlbSkge1xuICAgIGh0bWwge1xuICAgICAgZm9udC1zaXplOiA3NSU7IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc1ZW0pIHtcbiAgICBodG1sIHtcbiAgICAgIGZvbnQtc2l6ZTogNTYuMjUlOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgaHRtbCB7XG4gICAgICBmb250LXNpemU6IDUwJTsgfSB9XG5cbmJvZHkge1xuICAvKiBjaGFuZ2VzIGJveCBtb2RlbCBzbyBib3JkZXJzIGFuZCBwYWRkaW5nIGFyZSBub3QgYWRkZWQgdG8gdG90YWwgd2lkdGggb3IgaGVpZ2ggc3BlY2lmaWVkIGZvciB0aGF0IGJveCovXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBhZGRpbmc6IDNyZW07XG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgYm9keSB7XG4gICAgICBwYWRkaW5nOiAwOyB9IH1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTVjNTdhO1xuICBjb2xvcjogI2ZmZjsgfVxuXG4udS1jZW50ZXItdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50OyB9XG5cbi51LW1hcmdpbi1ib3R0b20tYmlnIHtcbiAgbWFyZ2luLWJvdHRvbTogOHJlbSAhaW1wb3J0YW50O1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC51LW1hcmdpbi1ib3R0b20tYmlnIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDVyZW0gIWltcG9ydGFudDsgfSB9XG5cbi51LW1hcmdpbi1ib3R0b20tbWVkaXVtIHtcbiAgbWFyZ2luLWJvdHRvbTogNHJlbSAhaW1wb3J0YW50O1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC51LW1hcmdpbi1ib3R0b20tbWVkaXVtIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDNyZW0gIWltcG9ydGFudDsgfSB9XG5cbi51LW1hcmdpbi1ib3R0b20tc21hbGwge1xuICBtYXJnaW4tYm90dG9tOiAxLjVyZW0gIWltcG9ydGFudDsgfVxuXG4udS1tYXJnaW4tdG9wLWh1Z2Uge1xuICBtYXJnaW4tYm90dG9tOiAxMHJlbSAhaW1wb3J0YW50OyB9XG5cbi51LW1hcmdpbi10b3AtYmlnIHtcbiAgbWFyZ2luLWJvdHRvbTogOHJlbSAhaW1wb3J0YW50OyB9XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJMYXRvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDEuNztcbiAgY29sb3I6ICM3Nzc7IH1cblxuLmhlYWRpbmctcHJpbWFyeSB7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAvKiBIYWNrOiBGaXhlcyBmaW5hbCBzaGFrZSBvZiBhbmltYXRpb24gYnVnIGluIENTUyAqL1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIG1hcmdpbi1ib3R0b206IDZyZW07IH1cbiAgLmhlYWRpbmctcHJpbWFyeS0tbWFpbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiA2cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDMuNXJlbTtcbiAgICAvKiBTZXQgdGhlIGFuaW1hdGlvbiBuYW1lIGFuZCBkdXJhdGlvbiAqL1xuICAgIGFuaW1hdGlvbi1uYW1lOiBtb3ZlSW5MZWZ0O1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XG4gICAgLyogSG93IGFuaW1hdGlvbiBzaG91bGQgcHJvZ3Jlc3Mgb3ZlciB0aW1lICovXG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7XG4gICAgLyogU2V0cyBhIGRlbGF5IGJlZm9yZSB0aGUgYW5pbWF0aW9uIHN0YXJ0cyAqL1xuICAgIC8qIGl0ZXJhdGlvbi1jb3VudCByZXBsYXlzIHRoZSBhbmltYXRpb24gKi9cbiAgICAvKiBhbmltYXRpb24tZGVsYXk6IDNzO1xyXG4gICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMztcclxuICAgICovXG4gICAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzcuNWVtKSB7XG4gICAgICAuaGVhZGluZy1wcmltYXJ5LS1tYWluIHtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDFyZW07XG4gICAgICAgIGZvbnQtZmFtaWx5OiA1cmVtOyB9IH1cbiAgLmhlYWRpbmctcHJpbWFyeS0tc3ViIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogMS43NXJlbTtcbiAgICAvKiBBbmltYXRpb24gU2hvcnRoYW5kICovXG4gICAgYW5pbWF0aW9uOiBtb3ZlSW5SaWdodCAxcyBlYXNlLW91dDtcbiAgICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNy41ZW0pIHtcbiAgICAgIC5oZWFkaW5nLXByaW1hcnktLXN1YiB7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAuNXJlbTsgfSB9XG5cbi5oZWFkaW5nLXNlY29uZGFyeSB7XG4gIGZvbnQtc2l6ZTogMy41cmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogNzAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzdlZDU2ZiwgIzI4YjQ4NSk7XG4gIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xuICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIHRyYW5zaXRpb246IGFsbCAuMnM7XG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovXG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgLmhlYWRpbmctc2Vjb25kYXJ5IHtcbiAgICAgIGZvbnQtc2l6ZTogM3JlbTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzcuNWVtKSB7XG4gICAgLmhlYWRpbmctc2Vjb25kYXJ5IHtcbiAgICAgIGZvbnQtc2l6ZTogMi41cmVtOyB9IH1cbiAgLmhlYWRpbmctc2Vjb25kYXJ5OmhvdmVyIHtcbiAgICB0cmFuc2Zvcm06IHNrZXdZKDJkZWcpIHNrZXdYKDE1ZGVnKSBzY2FsZSgxLjEpO1xuICAgIHRleHQtc2hhZG93OiAwLjVyZW0gMXJlbSAycmVtIHJnYmEoMCwgMCwgMCwgMC4yKTsgfVxuXG4uaGVhZGluZy10ZXJ0aWFyeSB7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBmb250LXdlaWdodDogNzAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi5wYXJhZ3JhcGgge1xuICBmb250LXNpemU6IDEuNnJlbTsgfVxuICAucGFyYWdyYXBoOm5vdChsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWJvdHRvbTogM3JlbTsgfVxuXG4uYmctdmlkZW8ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgb3BhY2l0eTogLjE1O1xuICB6LWluZGV4OiAtMTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAuYmctdmlkZW9fX2NvbnRlbnQge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuXG4uYnRuIHtcbiAgLyogTWFrZSBpdCBhcHBlYXIgc2FtZSBhcyBvcmlnaW5hbCBidXR0b24gKi9cbiAgLyogQW5pbWF0ZSBhIGJ1dHRvbiAqL1xuICAvKlxyXG4mLXRleHQ6bGluaywgJi10ZXh0OnZpc2l0ZWQge1xyXG4gIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gIGNvbG9yOiAjNTVjNTdhO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1NWM1N2E7XHJcbiAgcGFkZGluZzogM3B4O1xyXG4gIHRyYW5zaXRpb246IGFsbCAuMnM7XHJcbn1cclxuXHJcbiYtdGV4dDpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU1YzU3YTtcclxuICBjb2xvcjogI2ZmZjtcclxuICBib3gtc2hhZG93OiAwIDFyZW0gMnJlbSByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcclxufVxyXG5cclxuJi10ZXh0OmFjdGl2ZSB7XHJcbiAgYm94LXNoYWRvdzogMCAwLjVyZW0gMXJlbSByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcclxufVxyXG4qLyB9XG4gIC5idG4sIC5idG46bGluaywgLmJ0bjp2aXNpdGVkIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBwYWRkaW5nOiAxLjVyZW0gNHJlbTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgYm9yZGVyLXJhZGl1czogMTByZW07XG4gICAgLyogQW5pbWF0ZSBhbGwgcHJvcGVydGllcyAqL1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjJzO1xuICAgIC8qIHRoZSBidG46OmFmdGVyIHBvc2l0aW9uOmFic29sdXRlIHByb3BlcnR5IGxvb2tzIGZvciB0aGlzIHJlbGF0aXZlIHJlZmVyZW5jZSAqL1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5idG46aG92ZXIge1xuICAgIC8qIE1vdmUgdXAgKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTNweCk7XG4gICAgYm94LXNoYWRvdzogMCAxcmVtIDJyZW0gcmdiYSgwLCAwLCAwLCAwLjIpO1xuICAgIC8qIEFmdGVyIHRoZSBidXR0b24gaXMgaG92ZXJlZCBhd2F5IGZyb20gKi9cbiAgICAvKiBuZXN0ZWQsIHdvdWxkIGNvbXBpbGUgdG8gLmJ0bjpob3Zlcjo6YWZ0ZXIgKi8gfVxuICAgIC5idG46aG92ZXI6OmFmdGVyIHtcbiAgICAgIC8qIEluY3JlYXNlIGVsZW1lbnQgc2NhbGUgKi9cbiAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEuNCkgc2NhbGVZKDEuNik7XG4gICAgICAvKiBGYWRlIG91dCB0byBpbnZpc2libGUgKi9cbiAgICAgIG9wYWNpdHk6IDA7IH1cbiAgLmJ0bjphY3RpdmUsXG4gIC5idG4gLmJ0bjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICAvKiBNb3ZlcyBkb3duIDFweCBmcm9tIElOSVRJQUwgU1RBVEUgKG5vdCBob3ZlcmVkIHN0YXRlKSB3aGVuIGNsaWNrZWQgKi9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTFweCk7XG4gICAgLyogRGVjcmVhc2Ugc2hhb3cgd2hlbiBjbGlja2VkICovXG4gICAgYm94LXNoYWRvdzogMCAwLjVyZW0gMXJlbSByZ2JhKDAsIDAsIDAsIDAuMik7IH1cbiAgLmJ0bi0td2hpdGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgY29sb3I6ICM3Nzc7XG4gICAgLyogbmVzdGVkLCB0aGlzIHdvdWxkIGJlIC5idG4tLXdoaXRlOjphZnRlciovIH1cbiAgICAuYnRuLS13aGl0ZTo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuICAuYnRuLS1ncmVlbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzU1YzU3YTtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAuYnRuLS1ncmVlbjo6YWZ0ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NWM1N2E7IH1cbiAgLmJ0bjo6YWZ0ZXIge1xuICAgIC8qIE11c3Qgc3BlY2lmeSBjb250ZW50IHByb3BlcnR5IHNvIGl0IGFwcGVyYXMgKi9cbiAgICBjb250ZW50OiBcIlwiO1xuICAgIC8qIE11c3QgZGlzcGxheSBwcm9wZXJ0eSBmb3IgaXQgdG8gZGlzcGxheSAqL1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAvKiAxMDAlIG9mIHdpZHRoIG9mIHRoZSBidXR0b24gc2luY2UgOjphZnRlciBhY3RzIGxpa2UgYSBjaGlsZCBwcm9wZXJ0eSAqL1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHJlbTtcbiAgICAvKiBQdXQgaXQgYmVoaW5kIGJ1dHRvbiAqL1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAvKiBUaGlzIGxvY2F0aW9uIHJlZmVyZW5jZSBpcyB0aGUgZmlyc3QgZWxlbWVudCB3aXRoIGEgcmVsYXRpdmUgcG9zaXRpb24gaXQgY2FuIGZpbmQgKi9cbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICAvKiBEZWZpbmVzIHBvc2l0aW9uIG9mIGxheWVyZWQgZWxlbWVudHMuIC0xIHB1dHMgaXQgYmVoaW5kICovXG4gICAgei1pbmRleDogLTE7XG4gICAgLyogU2V0IHRyYW5zaXRpb24gZnJvbSBvcmlnaW5hbCBzdGF0ZSAqL1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjRzOyB9XG4gIC5idG4tLWFuaW1hdGVkIHtcbiAgICAvKiBNb3ZlIHVwIGZyb20gYmVsb3cuIC43NXMgaXMgYSBkZWxheSAqL1xuICAgIGFuaW1hdGlvbjogbW92ZUluQm90dG9tIDAuNXMgZWFzZS1vdXQgMC43NXM7XG4gICAgLyogQXBwbGllcyBrZXlmcmFtZXMgMCUgc3R5bGVzIGJlZm9yZSBhbmltYXRpb24gc3RhcnRzLiBPdGhlcndpc2UgeW91J2Qgc2VlIHRoZSBlbGVtZW50IGJlZm9yZSBpdCBhbmltYXRlcyAqL1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGJhY2t3YXJkczsgfVxuXG4uYnRuLXRleHQ6bGluaywgLmJ0bi10ZXh0OnZpc2l0ZWQge1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgY29sb3I6ICM1NWM1N2E7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzU1YzU3YTtcbiAgcGFkZGluZzogM3B4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yczsgfVxuXG4uYnRuLXRleHQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTVjNTdhO1xuICBjb2xvcjogI2ZmZjtcbiAgYm94LXNoYWRvdzogMCAxcmVtIDFyZW0gcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0ycHgpOyB9XG5cbi5idG4tdGV4dC5hY3RpdmUge1xuICBib3gtc2hhZG93OiAwIDAuNXJlbSAxcmVtIHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxuXG4uY2FyZCB7XG4gIHBlcnNwZWN0aXZlOiAxNTByZW07XG4gIC1tb3otcGVyc3BlY3RpdmU6IDE1MHJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDUycmVtOyB9XG4gIC5jYXJkX19zaWRlIHtcbiAgICBoZWlnaHQ6IDUycmVtO1xuICAgIHRyYW5zaXRpb246IGFsbCAuOHMgZWFzZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJveC1zaGFkb3c6IDAgMS41cmVtIDRyZW0gcmdiYSgwLCAwLCAwLCAwLjE1KTsgfVxuICAgIC5jYXJkX19zaWRlLS1mcm9udCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG4gICAgLmNhcmRfX3NpZGUtLWJhY2sge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7IH1cbiAgICAgIC5jYXJkX19zaWRlLS1iYWNrLTEge1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgYm90dG9tLCAjZmZiOTAwLCAjZmY3NzMwKTsgfVxuICAgICAgLmNhcmRfX3NpZGUtLWJhY2stMiB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCBib3R0b20sICM3ZWQ1NmYsICMyOGI0ODUpOyB9XG4gICAgICAuY2FyZF9fc2lkZS0tYmFjay0zIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IGJvdHRvbSwgIzI5OThmZiwgIzU2NDNmYSk7IH1cbiAgLmNhcmQ6aG92ZXIgLmNhcmRfX3NpZGUtLWZyb250IHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoLTE4MGRlZyk7IH1cbiAgLmNhcmQ6aG92ZXIgLmNhcmRfX3NpZGUtLWJhY2sge1xuICAgIHRyYW5zZm9ybTogcm90YXRlWSgwKTsgfVxuICAuY2FyZF9fcGljdHVyZSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBoZWlnaHQ6IDIzcmVtO1xuICAgIGJhY2tncm91bmQtYmxlbmQtbW9kZTogc2NyZWVuO1xuICAgIC13ZWJraXQtY2xpcC1wYXRoOiBwb2x5Z29uKDAgMCwgMTAwJSAwLCAxMDAlIDg1JSwgMCAxMDAlKTtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMCAwLCAxMDAlIDAsIDEwMCUgODUlLCAwIDEwMCUpO1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDNweDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogM3B4OyB9XG4gICAgLmNhcmRfX3BpY3R1cmUtLTEge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IGJvdHRvbSwgI2ZmYjkwMCwgI2ZmNzczMCksIHVybCguLi9pbWcvbmF0LTUuanBnKTsgfVxuICAgIC5jYXJkX19waWN0dXJlLS0yIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCBib3R0b20sICM3ZWQ1NmYsICMyOGI0ODUpLCB1cmwoLi4vaW1nL25hdC02LmpwZyk7IH1cbiAgICAuY2FyZF9fcGljdHVyZS0tMyB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgYm90dG9tLCAjMjk5OGZmLCAjNTY0M2ZhKSwgdXJsKC4uL2ltZy9uYXQtNy5qcGcpOyB9XG4gIC5jYXJkX19oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDIuOHJlbTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMTJyZW07XG4gICAgcmlnaHQ6IDJyZW07XG4gICAgd2lkdGg6IDc1JTsgfVxuICAuY2FyZF9faGVhZGluZy1zcGFuIHtcbiAgICBwYWRkaW5nOiAxcmVtIDEuNXJlbTtcbiAgICAtd2Via2l0LWJveC1kZWNvcmF0aW9uLWJyZWFrOiBjbG9uZTtcbiAgICBib3gtZGVjb3JhdGlvbi1icmVhazogY2xvbmU7IH1cbiAgICAuY2FyZF9faGVhZGluZy1zcGFuLS0xIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCBib3R0b20sIHJnYmEoMjU1LCAxODUsIDAsIDAuODUpLCByZ2JhKDI1NSwgMTE5LCA0OCwgMC44NSkpOyB9XG4gICAgLmNhcmRfX2hlYWRpbmctc3Bhbi0tMiB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgYm90dG9tLCByZ2JhKDEyNiwgMjEzLCAxMTEsIDAuODUpLCByZ2JhKDQwLCAxODAsIDEzMywgMC44NSkpOyB9XG4gICAgLmNhcmRfX2hlYWRpbmctc3Bhbi0tMyB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgYm90dG9tLCByZ2JhKDQxLCAxNTIsIDI1NSwgMC44NSksIHJnYmEoODYsIDY3LCAyNTAsIDAuODUpKTsgfVxuICAuY2FyZF9fZGV0YWlscyB7XG4gICAgcGFkZGluZzogM3JlbTsgfVxuICAgIC5jYXJkX19kZXRhaWxzIHVsIHtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICAgIC5jYXJkX19kZXRhaWxzIHVsIGxpIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgcGFkZGluZzogMXJlbTsgfVxuICAgICAgICAuY2FyZF9fZGV0YWlscyB1bCBsaTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZTsgfVxuICAuY2FyZF9fY3RhIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHdpZHRoOiA5MCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5jYXJkX19wcmljZS1ib3gge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBtYXJnaW4tYm90dG9tOiA4cmVtOyB9XG4gIC5jYXJkX19wcmljZS1vbmx5IHtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIC5jYXJkX19wcmljZS12YWx1ZSB7XG4gICAgZm9udC1zaXplOiA2cmVtO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSwgb25seSBzY3JlZW4gYW5kIChob3Zlcjogbm9uZSkge1xuICAgIC5jYXJkIHtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgICAgIGJveC1zaGFkb3c6IDAgMS41cmVtIDRyZW0gcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cbiAgICAgIC5jYXJkX19zaWRlIHtcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJveC1zaGFkb3c6IG5vbmU7IH1cbiAgICAgICAgLmNhcmRfX3NpZGUtLWJhY2sge1xuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlWSgwZGVnKTtcbiAgICAgICAgICBjbGlwLXBhdGg6IHBvbHlnb24oMCAxNSUsIDEwMCUgMCwgMTAwJSAxMDAlLCAwIDEwMCUpOyB9XG4gICAgICAuY2FyZDpob3ZlciAuY2FyZF9fc2lkZS0tZnJvbnQge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMCk7IH1cbiAgICAgIC5jYXJkX19kZXRhaWxzIHtcbiAgICAgICAgcGFkZGluZzogMXJlbSAzcmVtOyB9XG4gICAgICAuY2FyZF9fY3RhIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDAlO1xuICAgICAgICBsZWZ0OiAwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwYWRkaW5nOiA3cmVtIDRyZW0gNHJlbSA0cmVtOyB9XG4gICAgICAuY2FyZF9fcHJpY2UtYm94IHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogM3JlbTsgfVxuICAgICAgLmNhcmRfX3ByaWNlLXZhbHVlIHtcbiAgICAgICAgZm9udC1zaXplOiA0cmVtOyB9IH1cblxuLmNvbXBvc2l0aW9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5jb21wb3NpdGlvbl9fcGhvdG8ge1xuICAgIHdpZHRoOiA1NSU7XG4gICAgYm94LXNoYWRvdzogMCAxLjVyZW0gNHJlbSByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAxMDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgICAuY29tcG9zaXRpb25fX3Bob3RvIHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgd2lkdGg6IDMzLjMzMzMzJTtcbiAgICAgICAgYm94LXNoYWRvdzogMCAxLjVyZW0gM3JlbSByZ2JhKDAsIDAsIDAsIDAuMik7IH0gfVxuICAgIC5jb21wb3NpdGlvbl9fcGhvdG8tLXAxIHtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0b3A6IC0ycmVtO1xuICAgICAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgICAgIC5jb21wb3NpdGlvbl9fcGhvdG8tLXAxIHtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpOyB9IH1cbiAgICAuY29tcG9zaXRpb25fX3Bob3RvLS1wMiB7XG4gICAgICByaWdodDogMDtcbiAgICAgIHRvcDogMnJlbTtcbiAgICAgIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgICAgICAuY29tcG9zaXRpb25fX3Bob3RvLS1wMiB7XG4gICAgICAgICAgdG9wOiAtMXJlbTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMyk7XG4gICAgICAgICAgei1pbmRleDogMTAwOyB9IH1cbiAgICAuY29tcG9zaXRpb25fX3Bob3RvLS1wMyB7XG4gICAgICBsZWZ0OiAyMCU7XG4gICAgICB0b3A6IDEwcmVtO1xuICAgICAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgICAgIC5jb21wb3NpdGlvbl9fcGhvdG8tLXAzIHtcbiAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgIHRvcDogMXJlbTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7IH0gfVxuICAgIC5jb21wb3NpdGlvbl9fcGhvdG86aG92ZXIge1xuICAgICAgb3V0bGluZTogMS41cmVtIHNvbGlkICM1NWM1N2E7XG4gICAgICBvdXRsaW5lLW9mZnNldDogMnJlbTtcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSkgdHJhbnNsYXRlWSgtMC41cmVtKTtcbiAgICAgIGJveC1zaGFkb3c6IDAgMi41cmVtIDRyZW0gcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgICAgei1pbmRleDogMjA7IH1cbiAgLmNvbXBvc2l0aW9uOmhvdmVyIC5jb21wb3NpdGlvbl9fcGhvdG86bm90KDpob3Zlcikge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45NSk7IH1cblxuLmZlYXR1cmUtYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgcGFkZGluZzogMi41cmVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm94LXNoYWRvdzogMCAxLjVyZW0gNHJlbSByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gLjNzO1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC5mZWF0dXJlLWJveCB7XG4gICAgICBwYWRkaW5nOiAycmVtOyB9IH1cbiAgLmZlYXR1cmUtYm94X19pY29uIHtcbiAgICBmb250LXNpemU6IDZyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogLjVyZW07XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzdlZDU2ZiwgIzI4YjQ4NSk7XG4gICAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2LjI1ZW0pIHtcbiAgICAgIC5mZWF0dXJlLWJveF9faWNvbiB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7IH0gfVxuICAuZmVhdHVyZS1ib3g6aG92ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMS41cmVtKSBzY2FsZSgxLjAzKTsgfVxuXG4uZm9ybV9fZ3JvdXA6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07IH1cblxuLmZvcm1fX2lucHV0IHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgcGFkZGluZzogMS41cmVtIDJyZW07XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgd2lkdGg6IDkwJTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRyYW5zaXRpb246IGFsbCAuM3M7XG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgLmZvcm1fX2lucHV0IHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cbiAgLmZvcm1fX2lucHV0OmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IDAgMXJlbSAycmVtIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgIzU1YzU3YTsgfVxuICAuZm9ybV9faW5wdXQ6Zm9jdXM6aW52YWxpZCB7XG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmZjc3MzA7IH1cbiAgLmZvcm1fX2lucHV0Ojotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogIzk5OTsgfVxuXG4uZm9ybV9fbGFiZWwge1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiAycmVtO1xuICBtYXJnaW4tdG9wOiAuN3JlbTtcbiAgdHJhbnNpdGlvbjogYWxsIC4zczsgfVxuXG4uZm9ybV9faW5wdXQ6cGxhY2Vob2xkZXItc2hvd24gKyAuZm9ybV9fbGFiZWwge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNHJlbSk7IH1cblxuLmZvcm1fX3JhZGlvLWdyb3VwIHtcbiAgd2lkdGg6IDQ5JTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC5mb3JtX19yYWRpby1ncm91cCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbi1ib3R0b206IDJyZW07IH0gfVxuXG4uZm9ybV9fcmFkaW8taW5wdXQge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5mb3JtX19yYWRpby1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMS42cmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiA1cmVtOyB9XG5cbi5mb3JtX19yYWRpby1idXR0b24ge1xuICBoZWlnaHQ6IDNyZW07XG4gIHdpZHRoOiAzcmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJvcmRlcjogNXB4IHNvbGlkICM1NWM1N2E7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0uNHJlbTtcbiAgbGVmdDogMDsgfVxuICAuZm9ybV9fcmFkaW8tYnV0dG9uOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDEuM3JlbTtcbiAgICB3aWR0aDogMS4zcmVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NWM1N2E7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4yczsgfVxuXG4uZm9ybV9fcmFkaW8taW5wdXQ6Y2hlY2tlZCB+IC5mb3JtX19yYWRpby1sYWJlbCAuZm9ybV9fcmFkaW8tYnV0dG9uOjphZnRlciB7XG4gIG9wYWNpdHk6IDE7IH1cblxuLnBvcHVwIHtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XG4gIHotaW5kZXg6IDk5OTk7XG4gIG9wYWNpdHk6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogYWxsIC4zczsgfVxuICBAc3VwcG9ydHMgKC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpKSBvciAoYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpKSB7XG4gICAgLnBvcHVwIHtcbiAgICAgIC13ZWJraXQtYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpO1xuICAgICAgYmFja2Ryb3AtZmlsdGVyOiBibHVyKDEwcHgpO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpOyB9IH1cbiAgLnBvcHVwX19jb250ZW50IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHdpZHRoOiA3NSU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBib3gtc2hhZG93OiAwIDJyZW0gNHJlbSByZ2FiKCMwMDAsIDAuMik7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgwLjUpO1xuICAgIHRyYW5zaXRpb246IGFsbCAuNHMgLjJzOyB9XG4gIC5wb3B1cF9fbGVmdCB7XG4gICAgd2lkdGg6IDMzLjMzMzMzJTtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOyB9XG4gIC5wb3B1cF9fcmlnaHQge1xuICAgIHdpZHRoOiA2Ni42NjY2NiU7XG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIHBhZGRpbmc6IDNyZW0gNXJlbTsgfVxuICAucG9wdXBfX2ltZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLnBvcHVwX190ZXh0IHtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiA0cmVtO1xuICAgIC1tb3otY29sdW1uLWNvdW50OiAyO1xuICAgIC1tb3otY29sdW1uLWdhcDogNHJlbTtcbiAgICAtbW96LWNvbHVtbi1ydWxlOiAxcHggc29saWQgI2VlZTtcbiAgICBjb2x1bW4tY291bnQ6IDI7XG4gICAgY29sdW1uLWdhcDogNHJlbTtcbiAgICBjb2x1bW4tcnVsZTogMXB4IHNvbGlkICNlZWU7XG4gICAgLW1vei1oeXBoZW5zOiBhdXRvO1xuICAgIC1tcy1oeXBoZW5zOiBhdXRvO1xuICAgIC13ZWJraXQtaHlwaGVuczogYXV0bztcbiAgICBoeXBoZW5zOiBhdXRvOyB9XG4gIC5wb3B1cDp0YXJnZXQge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxuICAucG9wdXA6dGFyZ2V0IC5wb3B1cF9fY29udGVudCB7XG4gICAgb3BhY2l0eTogMTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSBzY2FsZSgxKTsgfVxuICAucG9wdXBfX2Nsb3NlOmxpbmssIC5wb3B1cF9fY2xvc2U6dmlzaXRlZCB7XG4gICAgY29sb3I6ICM3Nzc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMi41cmVtO1xuICAgIHJpZ2h0OiAyLjVyZW07XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdHJhbnNpdGlvbjogYWxsIC4ycztcbiAgICBsaW5lLWhlaWdodDogMTsgfVxuICAucG9wdXBfX2Nsb3NlOmhvdmVyIHtcbiAgICBjb2xvcjogIzU1YzU3YTsgfVxuXG4uc3Rvcnkge1xuICB3aWR0aDogNzUlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgYm94LXNoYWRvdzogMCAzcmVtIDZyZW0gcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNik7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgcGFkZGluZzogNnJlbTtcbiAgcGFkZGluZy1sZWZ0OiA5cmVtO1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgdHJhbnNmb3JtOiBza2V3WCgtMTJkZWcpO1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqL1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC5zdG9yeSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDVyZW07XG4gICAgICBwYWRkaW5nLWxlZnQ6IDdyZW07IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3LjVlbSkge1xuICAgIC5zdG9yeSB7XG4gICAgICB0cmFuc2Zvcm06IHNrZXdYKDApOyB9IH1cbiAgLnN0b3J5X19zaGFwZSB7XG4gICAgd2lkdGg6IDE1cmVtO1xuICAgIGhlaWdodDogMTVyZW07XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgLXdlYmtpdC1zaGFwZS1vdXRzaWRlOiBjaXJjbGUoNTAlIGF0IDUwJSA1MCUpO1xuICAgIHNoYXBlLW91dHNpZGU6IGNpcmNsZSg1MCUgYXQgNTAlIDUwJSk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zcmVtKSBza2V3WCgxMmRlZyk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAgIEBzdXBwb3J0cyAoY2xpcC1wYXRoOiBwb2x5Z29uKDAgMCkpIG9yICgtd2Via2l0LWNsaXAtcGF0aDogcG9seWdvbigwIDApKSB7XG4gICAgICAuc3RvcnlfX3NoYXBlIHtcbiAgICAgICAgLXdlYmtpdC1jbGlwLXBhdGg6IGNpcmNsZSg1MCUgYXQgNTAlIDUwJSk7XG4gICAgICAgIGNsaXAtcGF0aDogY2lyY2xlKDUwJSBhdCA1MCUgNTAlKTsgfSB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNy41ZW0pIHtcbiAgICAgIC5zdG9yeV9fc2hhcGUge1xuICAgICAgICB0cmFuc2Zvcm06IHNrZXdYKDApOyB9IH1cbiAgLnN0b3J5X19pbWcge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTRyZW0pIHNjYWxlKDEuNCk7XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIHRyYW5zaXRpb246IGFsbCAuNXM7IH1cbiAgLnN0b3J5X190ZXh0IHtcbiAgICB0cmFuc2Zvcm06IHNrZXdYKDEyZGVnKTtcbiAgICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNy41ZW0pIHtcbiAgICAgIC5zdG9yeV9fdGV4dCB7XG4gICAgICAgIHRyYW5zZm9ybTogc2tld1goMCk7IH0gfVxuICAuc3RvcnlfX2NhcHRpb24ge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgMjAlKTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtc2l6ZTogMS43cmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb246IGFsbCAuNXM7XG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOyB9XG4gIC5zdG9yeTpob3ZlciAuc3RvcnlfX2NhcHRpb24ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cblxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIHBhZGRpbmc6IDEwcmVtIDA7XG4gIGZvbnQtc2l6ZTogMS40cmVtO1xuICBjb2xvcjogI2Y3ZjdmNztcbiAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2LjI1ZW0pIHtcbiAgICAuZm9vdGVyIHtcbiAgICAgIHBhZGRpbmc6IDhyZW0gMDsgfSB9XG4gIC5mb290ZXJfX2xvZ28tYm94IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogOHJlbTtcbiAgICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgICAuZm9vdGVyX19sb2dvLWJveCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDZyZW07IH0gfVxuICAuZm9vdGVyX19sb2dvIHtcbiAgICB3aWR0aDogMTVyZW07XG4gICAgaGVpZ2h0OiBhdXRvOyB9XG4gIC5mb290ZXJfX25hdmlnYXRpb24ge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjNzc3O1xuICAgIHBhZGRpbmctdG9wOiAycmVtO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgICAuZm9vdGVyX19uYXZpZ2F0aW9uIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG4gIC5mb290ZXJfX2xpc3Qge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7IH1cbiAgLmZvb3Rlcl9faXRlbSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgLmZvb3Rlcl9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMS41cmVtOyB9XG4gIC5mb290ZXJfX2xpbms6bGluaywgLmZvb3Rlcl9fbGluazp2aXNpdGVkIHtcbiAgICBjb2xvcjogI2Y3ZjdmNztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzOyB9XG4gIC5mb290ZXJfX2xpbms6aG92ZXIsIC5mb290ZXJfX2xpbms6YWN0aXZlIHtcbiAgICBjb2xvcjogIzU1YzU3YTtcbiAgICBib3gtc2hhZG93OiAwIDFyZW0gMnJlbSByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNWRlZykgc2NhbGUoMS4zKTsgfVxuICAuZm9vdGVyX19jb3B5cmlnaHQge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjNzc3O1xuICAgIHBhZGRpbmctdG9wOiAycmVtO1xuICAgIHdpZHRoOiA4MCU7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2LjI1ZW0pIHtcbiAgICAgIC5mb290ZXJfX2NvcHlyaWdodCB7XG4gICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgIGZsb2F0OiBub25lOyB9IH1cblxuLmhlYWRlciB7XG4gIC8qIFRoaXMgYm94IHNob3VsZCBiZSA4NSUgb2Ygdmlld3BvcnQgc28gdXNlciBjYW4gc2VlIHRoZSBoZWFkZXIgY29udGludWVzIHRoZSBwYWdlKi9cbiAgaGVpZ2h0OiA4NXZoO1xuICAvKiBncmFkaWVudCwgY29tbWEsIHRoZW4gaW1hZ2UgKi9cbiAgLyogaGV4IGNvZGVzIGZvciByZ2JhIG9ubHkgd29yayBpbiBTQVNTICovXG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCBib3R0b20sIHJnYmEoMTI2LCAyMTMsIDExMSwgMC44KSwgcmdiYSg0MCwgMTgwLCAxMzMsIDAuOCkpLCB1cmwoLi4vaW1nL2hlcm8tc21hbGwuanBnKTtcbiAgLyogdGFrZXMgdXAgZnVsbCB3aWR0aCBvZiB2aWV3cG9ydCAqL1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAvKiB0b3Agb2YgaW1hZ2Ugd2lsbCBhbHdheXMgc3RheSBhdCB0b3Agb2Ygc2NyZWVuIHdoZW4gcmVzaXppbmcgKi9cbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wO1xuICAvKiBtdXN0IHNldCB0byByZWxhdGl2ZSBzbyB5b3UgY2FuIHBvc2l0aW9uIGxvZ28gYXMgYWJzb2x1dGUgKi9cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAvKlxyXG4gIEBtZWRpYSAobWluLXJlc29sdXRpb246IDE5MmRwaSkgYW5kIChtaW4td2lkdGg6IDM3LjVlbSkge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IGJvdHRvbSwgcmdiYSgkY29sb3Itc2Vjb25kYXJ5LWxpZ2h0LCAwLjgpLCByZ2JhKCRjb2xvci1wcmltYXJ5LWRhcmssIDAuOCkpLCB1cmwoLi4vaW1nL2hlcm8uanBnKTtcclxuICB9XHJcblxyXG4vL2Rpc3BsYXkgaGlnaHJlcyBpbWFnZSBpZiBzY3JlZW4gc2l6ZSBpcyBPVkVSIDIwMDBcclxuICBAbWVkaWEgKG1pbi13aWR0aDogMTI1ZW0pIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCBib3R0b20sIHJnYmEoJGNvbG9yLXNlY29uZGFyeS1saWdodCwgMC44KSwgcmdiYSgkY29sb3ItcHJpbWFyeS1kYXJrLCAwLjgpKSwgdXJsKC4uL2ltZy9oZXJvLmpwZyk7XHJcbiAgfVxyXG4qL1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqL1xuICAvKiB1c2UgJiBmb3IgYW55IHN1Yi1kZWNsYXJhdGlvbnMgdGhhdCBtZW50aW9uIC5oZWFkZXIgKi9cbiAgLyogd3JpdGUgdGhpcyBpbnN0ZWFkIG9mIGEgLmhlYWRlcl9fbG9nby1ib3ggc2VjdGlvblxyXG50aGlzIGNvbXBpbGVzIGludG8gYSAuaGVhZGVyX19sb2dvLWJveCBzZWN0aW9uIGluIENTUyAqLyB9XG4gIEBzdXBwb3J0cyAoY2xpcC1wYXRoOiBwb2x5Z29uKDAgMCkpIG9yICgtd2Via2l0LWNsaXAtcGF0aDogcG9seWdvbigwIDApKSB7XG4gICAgLmhlYWRlciB7XG4gICAgICAvKiBjbGlwLXBhdGggY2hhbmdlcyBzaGFwZSBvZiBpbWFnZSBieSBhZGp1c3RpbmcgNCBjb3JuZXJzIHVzaW5nIHggeSB2YWx1ZXMgKi9cbiAgICAgIC13ZWJraXQtY2xpcC1wYXRoOiBwb2x5Z29uKDAgMCwgMTAwJSAwLCAxMDAlIDc1dmgsIDAgMTAwJSk7XG4gICAgICBjbGlwLXBhdGg6IHBvbHlnb24oMCAwLCAxMDAlIDAsIDEwMCUgNzV2aCwgMCAxMDAlKTtcbiAgICAgIGhlaWdodDogOTV2aDsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIGFuZCAobWluLXdpZHRoOiA2MDBweCksIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSBhbmQgKG1pbi13aWR0aDogNjAwcHgpLCBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMjAwMHB4KSB7XG4gICAgLmhlYWRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQgYm90dG9tLCByZ2JhKDI1NSwgMTg1LCAwLCAwLjgpLCByZ2JhKDI1NSwgMTE5LCA0OCwgMC44KSksIHVybCguLi9pbWcvaGVyby5qcGcpOyB9IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzNy41ZW0pIHtcbiAgICAuaGVhZGVyIHtcbiAgICAgIC13ZWJraXQtY2xpcC1wYXRoOiBwb2x5Z29uKDAgMCwgMTAwJSAwLCAxMDAlIDg1dmgsIDAgMTAwJSk7XG4gICAgICBjbGlwLXBhdGg6IHBvbHlnb24oMCAwLCAxMDAlIDAsIDEwMCUgODV2aCwgMCAxMDAlKTsgfSB9XG4gIC5oZWFkZXJfX2xvZ28tYm94IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA0cmVtO1xuICAgIGxlZnQ6IDRyZW07IH1cbiAgLmhlYWRlcl9fbG9nbyB7XG4gICAgLyogc2l6ZSBvZiBsb2dvLCB3aWR0aCBzY2FsZXMgYXV0b21hdGljYWxseSAqL1xuICAgIGhlaWdodDogMy41cmVtOyB9XG4gIC5oZWFkZXJfX3RleHQtYm94IHtcbiAgICAvKiB0byBjZW50ZXIgKi9cbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgLyogdGhlIHRvcCBhbmQgbGVmdCB2YWx1ZSBwb3NpdGlvbiBmcm9tIHRoZSBwYXJlbnQgZWxlbWVudCwgc28gdGhleSBhcmUgbm90IHZpc3VhbGx5IGNlbnRlcmVkKi9cbiAgICB0b3A6IDQwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgLyogdGhpcyBjZW50ZXJzIHRoZSBlbGVtZW50IHZpc3VhbGx5IGJ5IGFkanVzdGluZyA1MCUgb2YgdGhlIGVsZW1lbnQsIG5vdCB0aGUgcGFyZW50Ki9cbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnJvdyB7XG4gIC8qIDExNDBweCAvIDEwID0gMTE0IHJlbSAqL1xuICBtYXgtd2lkdGg6IDExNHJlbTtcbiAgLyogY2VudGVyIGJsb2NrIGVsZW1lbnQgaW5zaWRlIGFub3RoZXIgYmxvY2sgZWxlbWVudCAqL1xuICBtYXJnaW46IDAgYXV0bztcbiAgLyogcmVtb3ZlIG1hcmdpbiBmcm9tIGxhc3Qgcm93IHVzaW5nIG5vdCBwc2V1ZG8gY2xhc3MgKi9cbiAgLyogIFRoZSBub3QgcHNldWRvIGNsYXNzIHNlbGVjdHMgZXZlcnl0aGluZyBleGNlcHQgdGhlIGxhc3QgY2hpbGQgKi9cbiAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAucm93Om5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1ib3R0b206IDhyZW07XG4gICAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgICAgLnJvdzpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNnJlbTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC5yb3cge1xuICAgICAgbWF4LXdpZHRoOiA1MHJlbTtcbiAgICAgIHBhZGRpbmc6IDAgM3JlbTsgfSB9XG4gIC5yb3c6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoOyB9XG4gIC5yb3cgW2NsYXNzXj1cImNvbC1cIl0ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIC8qc2luY2UgZ3V0dGVyIGlzIG9ubHkgYXBwbGllZCB0byB0aGUgcmlnaHQgb2YgYW4gZWxlbWVudCB0aGVcclxuICAgIHlvdSBtdXN0IHJlbW92ZSB0aGUgZ3V0dGVyIGZyb20gdGhlIGVsZW1lbnQgYWxsIHRoZSB3YXkgb24gdGhlIHJpZ2h0ICovXG4gICAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAgIC5yb3cgW2NsYXNzXj1cImNvbC1cIl06bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDZyZW07XG4gICAgICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2LjI1ZW0pIHtcbiAgICAgICAgLnJvdyBbY2xhc3NePVwiY29sLVwiXTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogNnJlbTsgfSB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgICAucm93IFtjbGFzc149XCJjb2wtXCJdIHtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfSB9XG4gIC5yb3cgLmNvbC0xLW9mLTIge1xuICAgIHdpZHRoOiBjYWxjKCgxMDAlIC0gNnJlbSkgLyAyKTsgfVxuICAucm93IC5jb2wtMS1vZi0zIHtcbiAgICB3aWR0aDogY2FsYygoMTAwJSAtIDIgKiA2cmVtKSAvIDMpOyB9XG4gIC5yb3cgLmNvbC0xLW9mLTQge1xuICAgIHdpZHRoOiBjYWxjKCgxMDAlIC0gMyAqIDZyZW0pIC8gNCk7IH1cbiAgLnJvdyAuY29sLTItb2YtMyB7XG4gICAgd2lkdGg6IGNhbGMoKDIgKiAoMTAwJSAtIDIgKiA2cmVtKSAvIDMpICsgNnJlbSk7IH1cbiAgLnJvdyAuY29sLTItb2YtNCB7XG4gICAgd2lkdGg6IGNhbGMoKDIgKiAoMTAwJSAtIDMgKiA2cmVtKSAvIDQpICsgNnJlbSk7IH1cbiAgLnJvdyAuY29sLTMtb2YtNCB7XG4gICAgd2lkdGg6IGNhbGMoKDMgKiAoMTAwJSAtIDMgKiA2cmVtKSAvIDQpICsgMiAqIDZyZW0pOyB9XG5cbi5uYXZpZ2F0aW9uX19jaGVja2JveCB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLm5hdmlnYXRpb25fX2J1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGhlaWdodDogN3JlbTtcbiAgd2lkdGg6IDdyZW07XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA2cmVtO1xuICByaWdodDogNnJlbTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB6LWluZGV4OiAyMDAwO1xuICBib3gtc2hhZG93OiAwIDFyZW0gM3JlbSByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqL1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC5uYXZpZ2F0aW9uX19idXR0b24ge1xuICAgICAgdG9wOiA0cmVtO1xuICAgICAgcmlnaHQ6IDRyZW07IH0gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM3LjVlbSkge1xuICAgIC5uYXZpZ2F0aW9uX19idXR0b24ge1xuICAgICAgdG9wOiAzLjVyZW07XG4gICAgICByaWdodDogMy41cmVtOyB9IH1cblxuLm5hdmlnYXRpb25fX2JhY2tncm91bmQge1xuICBoZWlnaHQ6IDZyZW07XG4gIHdpZHRoOiA2cmVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA2LjVyZW07XG4gIHJpZ2h0OiA2LjVyZW07XG4gIGJhY2tncm91bmQtaW1hZ2U6IHJhZGlhbC1ncmFkaWVudCgjN2VkNTZmLCAjMjhiNDg1KTtcbiAgei1pbmRleDogMTAwMDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuOHMgY3ViaWMtYmV6aWVyKDAuODYsIDAsIDAuMDcsIDEpO1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqL1xuICAvKlxyXG4gIElmIHRoZSBicmVha3BvaW50IGlzIGNhbGxlZCBwaG9uZSwgdGhlIGZvbGxvd2luZyBtZWRpYSBxdWVyeSBpcyB1c2VkXHJcbiAgIEBjb250ZW50IGFsbG93cyB5b3UgdG8gcGFzcyBibG9ja3Mgb2YgY29kZSBmcm9tIG90aGVyIENTUyBwYWdlcyBpbnRvIHRoaXMgbWl4aW5cclxuICAgVXNlIHJlbGF0aXZlIHVuaXQgZm9yIG1lZGlhIHF1ZXJ5LW5vdCBwaXhlbHNcclxuICAgZW1zIGFuZCByZW1zIG5vdCBhZmZlY3RlZCBieSBodG1sOiBmb250LXNpemUgc2V0dGluZ1xyXG4gICAxIHJlbSBvciBlbSBpcyBlcXVhbCB0byBkZWZhdWx0IG9mIHRoZSBicm93c2VyLCBzbyBpZiBhIHVzZXIgY2hhbmdlcyB0aGUgYnJvd3NlciBkZWZhdWx0LCBpdCBjaGFuZ2VzIHRoZSBtZWRpYSBxdWVyeVxyXG5cclxuICAgZW1zIGlmIHRoZSBiZXN0IG9wdGlvbiBzaW5jZXMgcmVtcyBkb24ndCB3b3JrIGluIGFsbCBicm93c2Vyc1xyXG4gICAxZW0gPSAxNnB4O1xyXG4gICBcclxuICAgMTgwMC8xNiA9IDExMi41XHJcbiAgIDEyMDAvMTYgPSA3NVxyXG4gICA5MDAvMTYgPSA1Ni4yNVxyXG4gICA2MDAvMTYgPSAzNy41XHJcbiAgIFxyXG4gICBUaGVzZSB2YWx1ZXMgd2lsbCBiZSBhZGFwYXRlZCB0byBmb250IHNpemUgdXNlciBzZXRzIGZvciB0aGUgYnJvd3NlclxyXG5cclxuICAgT1JERVIgdG8gcHV0IGNvZGUgaW46XHJcbiAgIEJhc2UgKyBUeXBvZ3JhcGh5ID4gZ2VuZXJhbCBsYXlvdXQgKyBncmlkID4gcGFnZSBsYXlvdXRzID4gY29tcG9uZW50c1xyXG4gICAqLyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC5uYXZpZ2F0aW9uX19iYWNrZ3JvdW5kIHtcbiAgICAgIHRvcDogNC41cmVtO1xuICAgICAgcmlnaHQ6IDQuNXJlbTsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzcuNWVtKSB7XG4gICAgLm5hdmlnYXRpb25fX2JhY2tncm91bmQge1xuICAgICAgdG9wOiAzLjVyZW07XG4gICAgICByaWdodDogMy41cmVtOyB9IH1cblxuLm5hdmlnYXRpb25fX25hdiB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB6LWluZGV4OiAxNTAwO1xuICBvcGFjaXR5OiAwO1xuICB3aWR0aDogMDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuOHMgY3ViaWMtYmV6aWVyKDAuNjgsIC0wLjU1LCAwLjI2NSwgMS41NSk7IH1cblxuLm5hdmlnYXRpb25fX2xpc3Qge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5uYXZpZ2F0aW9uX19pdGVtIHtcbiAgbWFyZ2luOiAxcmVtOyB9XG5cbi5uYXZpZ2F0aW9uX19saW5rOmxpbmssIC5uYXZpZ2F0aW9uX19saW5rOnZpc2l0ZWQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgcGFkZGluZzogMXJlbSAycmVtO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTIwZGVnLCB0cmFuc3BhcmVudCAwJSwgdHJhbnNwYXJlbnQgNTAlLCAjZmZmIDUwJSk7XG4gIGJhY2tncm91bmQtc2l6ZTogMjIwJTtcbiAgdHJhbnNpdGlvbjogYWxsIC40czsgfVxuICAubmF2aWdhdGlvbl9fbGluazpsaW5rIHNwYW4sIC5uYXZpZ2F0aW9uX19saW5rOnZpc2l0ZWQgc3BhbiB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxLjVyZW07XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi5uYXZpZ2F0aW9uX19saW5rOmhvdmVyLCAubmF2aWdhdGlvbl9fbGluazphY3RpdmUge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlO1xuICBjb2xvcjogIzU1YzU3YTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDFyZW0pOyB9XG5cbi5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkIH4gLm5hdmlnYXRpb25fX2JhY2tncm91bmQge1xuICB0cmFuc2Zvcm06IHNjYWxlKDgwKTsgfVxuXG4ubmF2aWdhdGlvbl9fY2hlY2tib3g6Y2hlY2tlZCB+IC5uYXZpZ2F0aW9uX19uYXYge1xuICBvcGFjaXR5OiAxO1xuICB3aWR0aDogMTAwJTsgfVxuXG4ubmF2aWdhdGlvbl9faWNvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLXRvcDogMy41cmVtOyB9XG4gIC5uYXZpZ2F0aW9uX19pY29uLCAubmF2aWdhdGlvbl9faWNvbjo6YmVmb3JlLCAubmF2aWdhdGlvbl9faWNvbjo6YWZ0ZXIge1xuICAgIHdpZHRoOiAzcmVtO1xuICAgIGhlaWdodDogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUsIC5uYXZpZ2F0aW9uX19pY29uOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzOyB9XG4gIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUge1xuICAgIHRvcDogLS44cmVtOyB9XG4gIC5uYXZpZ2F0aW9uX19pY29uOjphZnRlciB7XG4gICAgdG9wOiAuOHJlbTsgfVxuXG4ubmF2aWdhdGlvbl9fYnV0dG9uOmhvdmVyIC5uYXZpZ2F0aW9uX19pY29uOjpiZWZvcmUge1xuICB0b3A6IC0xcmVtOyB9XG5cbi5uYXZpZ2F0aW9uX19idXR0b246aG92ZXIgLm5hdmlnYXRpb25fX2ljb246OmFmdGVyIHtcbiAgdG9wOiAxcmVtOyB9XG5cbi5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkICsgLm5hdmlnYXRpb25fX2J1dHRvbiAubmF2aWdhdGlvbl9faWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkICsgLm5hdmlnYXRpb25fX2J1dHRvbiAubmF2aWdhdGlvbl9faWNvbjo6YmVmb3JlIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTM1ZGVnKTtcbiAgdG9wOiAwOyB9XG5cbi5uYXZpZ2F0aW9uX19jaGVja2JveDpjaGVja2VkICsgLm5hdmlnYXRpb25fX2J1dHRvbiAubmF2aWdhdGlvbl9faWNvbjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtMTM1ZGVnKTtcbiAgdG9wOiAwOyB9XG5cbi5zZWN0aW9uLWFib3V0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcbiAgcGFkZGluZzogMjVyZW0gMDtcbiAgbWFyZ2luLXRvcDogLTIwdmg7XG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgLnNlY3Rpb24tYWJvdXQge1xuICAgICAgcGFkZGluZzogMjByZW0gMDsgfSB9XG5cbi5zZWN0aW9uLWZlYXR1cmVzIHtcbiAgcGFkZGluZzogMjByZW0gMDtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IGJvdHRvbSwgcmdiYSgxMjYsIDIxMywgMTExLCAwLjgpLCByZ2JhKDQwLCAxODAsIDEzMywgMC44KSksIHVybCguLi8uLi9pbWcvbmF0LTQuanBnKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgbWFyZ2luLXRvcDogLTEzcmVtO1xuICB0cmFuc2Zvcm06IHNrZXdZKC03ZGVnKTtcbiAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAuc2VjdGlvbi1mZWF0dXJlcyA+ICoge1xuICAgIHRyYW5zZm9ybTogc2tld1koN2RlZyk7IH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgLnNlY3Rpb24tZmVhdHVyZXMge1xuICAgICAgcGFkZGluZzogMTByZW0gMDsgfSB9XG5cbi5zZWN0aW9uLXRvdXJzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcbiAgcGFkZGluZzogMjVyZW0gMCAxNXJlbSAwO1xuICBtYXJnaW4tdG9wOiAtMTJyZW07XG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgLnNlY3Rpb24tdG91cnMge1xuICAgICAgcGFkZGluZzogMjByZW0gMCAxMHJlbSAwOyB9IH1cblxuLnNlY3Rpb24tc3RvcmllcyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMTVyZW0gMDtcbiAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2LjI1ZW0pIHtcbiAgICAuc2VjdGlvbi1zdG9yaWVzIHtcbiAgICAgIHBhZGRpbmc6IDEwcmVtIDA7IH0gfVxuXG4uc2VjdGlvbi1ib29rIHtcbiAgcGFkZGluZzogMTVyZW0gMDtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0IGJvdHRvbSwgIzdlZDU2ZiwgIzI4YjQ4NSk7XG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1Ni4yNWVtKSB7XG4gICAgLnNlY3Rpb24tYm9vayB7XG4gICAgICBwYWRkaW5nOiAxMHJlbSAwOyB9IH1cblxuLmJvb2sge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTA1ZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSkgMCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSA1MCUsIHRyYW5zcGFyZW50IDUwJSksIHVybCguLi9pbWcvbmF0LTEwLmpwZyk7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3gtc2hhZG93OiAwIDEuNXJlbSA0cmVtIHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovXG4gIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovIH1cbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NWVtKSB7XG4gICAgLmJvb2sge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDEwNWRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpIDAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSkgNjUlLCB0cmFuc3BhcmVudCA2NSUpLCB1cmwoLi4vaW1nL25hdC0xMC5qcGcpO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfSB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTYuMjVlbSkge1xuICAgIC5ib29rIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpIDAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSkgMTAwJSksIHVybCguLi9pbWcvbmF0LTEwLmpwZyk7IH0gfVxuICAuYm9va19fZm9ybSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBwYWRkaW5nOiA2cmVtO1xuICAgIC8qXHJcbiAgSWYgdGhlIGJyZWFrcG9pbnQgaXMgY2FsbGVkIHBob25lLCB0aGUgZm9sbG93aW5nIG1lZGlhIHF1ZXJ5IGlzIHVzZWRcclxuICAgQGNvbnRlbnQgYWxsb3dzIHlvdSB0byBwYXNzIGJsb2NrcyBvZiBjb2RlIGZyb20gb3RoZXIgQ1NTIHBhZ2VzIGludG8gdGhpcyBtaXhpblxyXG4gICBVc2UgcmVsYXRpdmUgdW5pdCBmb3IgbWVkaWEgcXVlcnktbm90IHBpeGVsc1xyXG4gICBlbXMgYW5kIHJlbXMgbm90IGFmZmVjdGVkIGJ5IGh0bWw6IGZvbnQtc2l6ZSBzZXR0aW5nXHJcbiAgIDEgcmVtIG9yIGVtIGlzIGVxdWFsIHRvIGRlZmF1bHQgb2YgdGhlIGJyb3dzZXIsIHNvIGlmIGEgdXNlciBjaGFuZ2VzIHRoZSBicm93c2VyIGRlZmF1bHQsIGl0IGNoYW5nZXMgdGhlIG1lZGlhIHF1ZXJ5XHJcblxyXG4gICBlbXMgaWYgdGhlIGJlc3Qgb3B0aW9uIHNpbmNlcyByZW1zIGRvbid0IHdvcmsgaW4gYWxsIGJyb3dzZXJzXHJcbiAgIDFlbSA9IDE2cHg7XHJcbiAgIFxyXG4gICAxODAwLzE2ID0gMTEyLjVcclxuICAgMTIwMC8xNiA9IDc1XHJcbiAgIDkwMC8xNiA9IDU2LjI1XHJcbiAgIDYwMC8xNiA9IDM3LjVcclxuICAgXHJcbiAgIFRoZXNlIHZhbHVlcyB3aWxsIGJlIGFkYXBhdGVkIHRvIGZvbnQgc2l6ZSB1c2VyIHNldHMgZm9yIHRoZSBicm93c2VyXHJcblxyXG4gICBPUkRFUiB0byBwdXQgY29kZSBpbjpcclxuICAgQmFzZSArIFR5cG9ncmFwaHkgPiBnZW5lcmFsIGxheW91dCArIGdyaWQgPiBwYWdlIGxheW91dHMgPiBjb21wb25lbnRzXHJcbiAgICovXG4gICAgLypcclxuICBJZiB0aGUgYnJlYWtwb2ludCBpcyBjYWxsZWQgcGhvbmUsIHRoZSBmb2xsb3dpbmcgbWVkaWEgcXVlcnkgaXMgdXNlZFxyXG4gICBAY29udGVudCBhbGxvd3MgeW91IHRvIHBhc3MgYmxvY2tzIG9mIGNvZGUgZnJvbSBvdGhlciBDU1MgcGFnZXMgaW50byB0aGlzIG1peGluXHJcbiAgIFVzZSByZWxhdGl2ZSB1bml0IGZvciBtZWRpYSBxdWVyeS1ub3QgcGl4ZWxzXHJcbiAgIGVtcyBhbmQgcmVtcyBub3QgYWZmZWN0ZWQgYnkgaHRtbDogZm9udC1zaXplIHNldHRpbmdcclxuICAgMSByZW0gb3IgZW0gaXMgZXF1YWwgdG8gZGVmYXVsdCBvZiB0aGUgYnJvd3Nlciwgc28gaWYgYSB1c2VyIGNoYW5nZXMgdGhlIGJyb3dzZXIgZGVmYXVsdCwgaXQgY2hhbmdlcyB0aGUgbWVkaWEgcXVlcnlcclxuXHJcbiAgIGVtcyBpZiB0aGUgYmVzdCBvcHRpb24gc2luY2VzIHJlbXMgZG9uJ3Qgd29yayBpbiBhbGwgYnJvd3NlcnNcclxuICAgMWVtID0gMTZweDtcclxuICAgXHJcbiAgIDE4MDAvMTYgPSAxMTIuNVxyXG4gICAxMjAwLzE2ID0gNzVcclxuICAgOTAwLzE2ID0gNTYuMjVcclxuICAgNjAwLzE2ID0gMzcuNVxyXG4gICBcclxuICAgVGhlc2UgdmFsdWVzIHdpbGwgYmUgYWRhcGF0ZWQgdG8gZm9udCBzaXplIHVzZXIgc2V0cyBmb3IgdGhlIGJyb3dzZXJcclxuXHJcbiAgIE9SREVSIHRvIHB1dCBjb2RlIGluOlxyXG4gICBCYXNlICsgVHlwb2dyYXBoeSA+IGdlbmVyYWwgbGF5b3V0ICsgZ3JpZCA+IHBhZ2UgbGF5b3V0cyA+IGNvbXBvbmVudHNcclxuICAgKi8gfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzVlbSkge1xuICAgICAgLmJvb2tfX2Zvcm0ge1xuICAgICAgICB3aWR0aDogNjUlOyB9IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDU2LjI1ZW0pIHtcbiAgICAgIC5ib29rX19mb3JtIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuIl19 */