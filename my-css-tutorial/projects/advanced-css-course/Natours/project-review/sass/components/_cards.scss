.card {
    //
    //FUNCTIONALITY
    //


    // add perspective so transform looks 3d
    perspective: 150rem;
    -moz-perspective: 150rem;

    // position relative for absolute positioned sides of cards
    position: relative;
    //height of entire card
    height: 52rem;











    &__side {

        //height of each side of the card. must match height of card
        height: 52rem;
        transition: all .8s ease;

        // use absolute position to stack --front and --back on top of each other
        //this also collapses parent height since these elements were removed from natural flow
        // to fix give same height as parent
        position: absolute;
        top: 0;
        left: 0;
        // Give them width so they are even with each other
        width: 100%;
        // hides the back part of an element
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        border-radius: 3px;
        // This does not allow the image to overflow the rounded card container
        overflow: hidden;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);






        &--front {
            background-color: $color-white;
        }





        // this is already rotated 180deg since it's the back of the card
        // on hover it should change to zero degrees
        &--back {

            transform: rotateY(180deg);


            &-1 {
                background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
            }

            &-2 {
                background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
            }

            &-3 {
                background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
            }
        }
    }






    //hover roates front side 180deg
    //when card is hovered, .card__side is transformed
    // .card:hover .card__side
    //this is -180 so it will turn in the same direction the back turns in
    &:hover &__side--front {
        transform: rotateY(-180deg);
    }

    // Since this is already rotated 180deg, change to zero
    &:hover &__side--back {
        transform: rotateY(0);
    }









    //
    // FRONT SIDE STYLING
    //

    &__picture {
        background-size: cover;
        height: 23rem;
        // this blends the linear-gradient over the image
        background-blend-mode: screen;
        //clips image into polygon
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
        //must manually set border-radius since overflow hidden on &__side is broken when clip-path is used
        //QUESTION: Didn't this work for the first card? or was that before clip-path was used? 
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;

        &--1 {
            // Add a linear gradient over the image
            background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark), url(../img/nat-5.jpg);
        }

        &--2 {
            background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark), url(../img/nat-6.jpg);
        }

        &--3 {
            background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark), url(../img/nat-7.jpg);
        }


    }





    //text that lays over image
    &__heading {
        font-size: 2.8rem;
        font-weight: 300;
        text-transform: uppercase;
        text-align: right;
        color: $color-white;

        //layer over background image
        position: absolute;
        top: 12rem;
        right: 2rem;

        //make more narrow so the text box stays within the card box
        width: 75%;

    }





    //create a separate section since this is an h4, not a child of .card__heading
    // it's a new element in the BEM system
    &__heading-span {
        //this breaks text into two lines
        padding: 1rem 1.5rem;
        //this treats broken text as different elements
        //applies all declarations to all boxes created by an element both styled the same
        //this helps in this example to make the padding the same for both lines of text
        -webkit-box-decoration-break: clone;
        box-decoration-break: clone;

        &--1 {
            background-image: linear-gradient(to right bottom,
                    rgba($color-secondary-light, .85),
                    rgba($color-secondary-dark, .85));
        }

        &--2 {
            background-image: linear-gradient(to right bottom,
                    rgba($color-primary-light, .85),
                    rgba($color-primary-dark, .85));
        }

        &--3 {
            background-image: linear-gradient(to right bottom,
                    rgba($color-tertiary-light, .85),
                    rgba($color-tertiary-dark, .85));
        }
    }







    &__details {
        padding: 3rem;

        ul {
            list-style: none;
            width: 80%;
            //center block element inside block element
            margin: 0 auto;

            li {
                text-align: center;
                font-size: 1.5rem;
                padding: 1rem;

                // no padding on bottom list item
                &:not(:last-child) {
                    border-bottom: 1px solid $color-grey-light-2;
                }
            }
        }
    }








    

    //
    // BACK SIDE STYLING
    //

    &__cta {
        position: absolute;
        //center
        top: 50%;
        left: 50%;
        //50% of width of element not the parent
        transform: translate(-50%, -50%);
        //so button text is centered
        width: 90%;
        text-align: center;
    }


    &__price-box {
        text-align: center;
        color: $color-white;
        margin-bottom: 8rem;
    }

    &__price-only {
        font-size: 1.4rem;
        text-transform: uppercase;
    }

    &__price-value {
        font-size: 6rem;
        font-weight: 100;
    }




























    // lots to change so copy everything into a single big media query, then edit out what you don't need

    // This was the origin line, but it does not take into consideration touch devices with large widths
    // @include respond(tab-port) {
    //rewrite it like this to include these types of devices. hover: none
    @media only screen and (max-width: 56.25em),
    only screen and (hover: none) {
        height: auto;
        //move here since there is no longer a back side
        border-radius: 3px;
        //move here since there is no longer a back side
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);
        background-color: $color-white;







        &__side {
            //height of each side of the card. must match height of card
            height: auto;
            //no longer 2 sides
            position: relative;
            //remove box shadow
            box-shadow: none;







            &--back {
                //not needed since small screens will not rotate cards
                transform: rotateY(0deg);
                // this cat the background on an angle
                clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);

            }
        }





        &:hover &__side--front {
            //Front side will not rotate on small screens
            transform: rotateY(0);
        }




        &__details {
            padding: 1rem 3rem;
        }




        &__cta {
            position: relative;
            //center
            top: 0%;
            left: 0%;
            transform: translate(0);
            width: 100%;
            padding: 7rem 4rem 4rem 4rem;
        }




        &__price-box {
            margin-bottom: 3rem;
        }




        &__price-value {
            font-size: 4rem;

        }


    }















}